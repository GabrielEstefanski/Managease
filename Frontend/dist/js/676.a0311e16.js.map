{"version":3,"file":"js/676.a0311e16.js","mappings":"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","sources":["webpack://web-project/./node_modules/randomcolor/randomColor.js","webpack://web-project/./src/views/HomePage.vue?784c","webpack://web-project/./src/views/HomePage.vue","webpack://web-project/./src/components/HorizontalBarChart.vue?f0f9","webpack://web-project/./src/components/HorizontalBarChart.vue","webpack://web-project/./node_modules/primevue/chart/style/chartstyle.esm.js","webpack://web-project/./node_modules/primevue/chart/chart.esm.js","webpack://web-project/./src/components/HorizontalBarChart.vue?c2be","webpack://web-project/./src/components/DoughnutChart.vue?d912","webpack://web-project/./src/components/DoughnutChart.vue","webpack://web-project/./src/components/DoughnutChart.vue?e660","webpack://web-project/./src/components/LineChart.vue?43a5","webpack://web-project/./src/components/LineChart.vue","webpack://web-project/./src/components/LineChart.vue?30b1","webpack://web-project/./src/components/BarChart.vue?15f4","webpack://web-project/./src/components/BarChart.vue","webpack://web-project/./src/components/BarChart.vue?b0ea","webpack://web-project/./src/components/PieChart.vue?9d77","webpack://web-project/./src/components/PieChart.vue","webpack://web-project/./src/components/PieChart.vue?9bb9","webpack://web-project/./src/views/HomePage.vue?150d"],"sourcesContent":["// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  // check if a range is taken\n  var colorRanges = [];\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n      // Value false at index i means the range i is not taken yet.\n      for (var i = 0; i < options.count; i++) {\n        colorRanges.push(false)\n        }\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        var color = randomColor(options);\n\n        if (seed !== null) {\n          options.seed = seed;\n        }\n\n        colors.push(color);\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue(options) {\n    if (colorRanges.length > 0) {\n      var hueRange = getRealHueRange(options.hue)\n\n      var hue = randomWithin(hueRange)\n\n      //Each of colorRanges.length ranges has a length equal approximatelly one step\n      var step = (hueRange[1] - hueRange[0]) / colorRanges.length\n\n      var j = parseInt((hue - hueRange[0]) / step)\n\n      //Check if the range j is taken\n      if (colorRanges[j] === true) {\n        j = (j + 2) % colorRanges.length\n      }\n      else {\n        colorRanges[j] = true\n           }\n\n      var min = (hueRange[0] + j * step) % 359,\n          max = (hueRange[0] + (j + 1) * step) % 359;\n\n      hueRange = [min, max]\n\n      hue = randomWithin(hueRange)\n\n      if (hue < 0) {hue = 360 + hue;}\n      return hue\n    }\n    else {\n      var hueRange = getHueRange(options.hue)\n\n      hue = randomWithin(hueRange);\n      // Instead of storing red as two seperate ranges,\n      // we group them, using negative numbers\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n\n      return hue;\n    }\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [ hue, hue ];\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      //generate random evenly destinct number from : https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n      var golden_ratio = 0.618033988749895\n      var r=Math.random()\n      r += golden_ratio\n      r %= 1\n      return Math.floor(range[0] + r*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n}\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [18,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [46,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [62,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [178, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [257, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [282, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HexToHSB (hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n          green = parseInt(hex.substr(2, 2), 16) / 255,\n          blue = parseInt(hex.substr(4, 2), 16) / 255;\n\n    var cMax = Math.max(red, green, blue),\n          delta = cMax - Math.min(red, green, blue),\n          saturation = cMax ? (delta / cMax) : 0;\n\n    switch (cMax) {\n      case red: return [ 60 * (((green - blue) / delta) % 6) || 0, saturation, cMax ];\n      case green: return [ 60 * (((blue - red) / delta) + 2) || 0, saturation, cMax ];\n      case blue: return [ 60 * (((red - green) / delta) + 4) || 0, saturation, cMax ];\n    }\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  // get The range of given hue when options.count!=0\n  function getRealHueRange(colorHue)\n  { if (!isNaN(colorHue)) {\n    var number = parseInt(colorHue);\n\n    if (number < 360 && number > 0) {\n      return getColorInfo(colorHue).hueRange\n    }\n  }\n    else if (typeof colorHue === 'string') {\n\n      if (colorDictionary[colorHue]) {\n        var color = colorDictionary[colorHue];\n\n        if (color.hueRange) {\n          return color.hueRange\n       }\n    } else if (colorHue.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorHue)[0]\n        return getColorInfo(hue).hueRange\n    }\n  }\n\n    return [0,360]\n}\n  return randomColor;\n}));\n","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, normalizeClass as _normalizeClass, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-3501a89d\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = { class: \"dashboard\" }\nconst _hoisted_3 = { class: \"title\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"spinner-container\"\n}\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"pi pi-spin pi-spinner large-spinner\" }, null, -1))\nconst _hoisted_6 = [\n  _hoisted_5\n]\nconst _hoisted_7 = { class: \"dashboard-display row\" }\nconst _hoisted_8 = { class: \"flex-card\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"flex-card-content\"\n}\nconst _hoisted_10 = {\n  key: 1,\n  class: \"flex-card-content\"\n}\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"flex-card-full\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"pi pi-money-bill\",\n    style: {\"font-size\":\"3.5rem\",\"color\":\"rgb(200, 200, 200)\"}\n  })\n], -1))\nconst _hoisted_12 = { class: \"flex-card\" }\nconst _hoisted_13 = {\n  key: 0,\n  class: \"flex-card-content\"\n}\nconst _hoisted_14 = {\n  key: 1,\n  class: \"flex-card-content\"\n}\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"flex-card-full\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"pi pi-briefcase\",\n    style: {\"font-size\":\"3.5rem\",\"color\":\"rgb(200, 200, 200)\"}\n  })\n], -1))\nconst _hoisted_16 = { class: \"flex-card\" }\nconst _hoisted_17 = {\n  key: 0,\n  class: \"flex-card-content\"\n}\nconst _hoisted_18 = {\n  key: 1,\n  class: \"flex-card-content\"\n}\nconst _hoisted_19 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"flex-card-full\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"pi pi-dollar\",\n    style: {\"font-size\":\"3.5rem\",\"color\":\"rgb(200, 200, 200)\"}\n  })\n], -1))\nconst _hoisted_20 = { class: \"flex-card\" }\nconst _hoisted_21 = {\n  key: 0,\n  class: \"flex-card-content\"\n}\nconst _hoisted_22 = {\n  key: 1,\n  class: \"flex-card-content\"\n}\nconst _hoisted_23 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"flex-card-full\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"pi pi-building\",\n    style: {\"font-size\":\"3.5rem\",\"color\":\"rgb(200, 200, 200)\"}\n  })\n], -1))\nconst _hoisted_24 = { class: \"dashboard-display row\" }\nconst _hoisted_25 = { class: \"col-md-4 col-sm-6 mt-5 mb-3\" }\nconst _hoisted_26 = {\n  key: 1,\n  class: \"empty-card\"\n}\nconst _hoisted_27 = { class: \"col-md-4 col-sm-6 mt-5 mb-3\" }\nconst _hoisted_28 = {\n  key: 1,\n  class: \"empty-card\"\n}\nconst _hoisted_29 = { class: \"dashboard-display\" }\nconst _hoisted_30 = { class: \"col-md-4 col-sm-6 mt-5 mb-3\" }\nconst _hoisted_31 = {\n  key: 0,\n  class: \"flex-card\"\n}\nconst _hoisted_32 = {\n  key: 1,\n  class: \"empty-card\"\n}\nconst _hoisted_33 = { class: \"col-md-4 col-sm-6 mt-5 mb-3\" }\nconst _hoisted_34 = {\n  key: 1,\n  class: \"empty-card\"\n}\nconst _hoisted_35 = {\n  key: 1,\n  class: \"empty-card\"\n}\nconst _hoisted_36 = { class: \"dashboard-display\" }\nconst _hoisted_37 = { class: \"card-branche-company mr-4\" }\nconst _hoisted_38 = {\n  key: 1,\n  class: \"empty-card\"\n}\nconst _hoisted_39 = { class: \"card-branche-company mr-3\" }\nconst _hoisted_40 = { class: \"col-md-4 mt-5 mb-3\" }\nconst _hoisted_41 = {\n  key: 1,\n  class: \"empty-card\"\n}\nconst _hoisted_42 = { class: \"dashboard-display\" }\nconst _hoisted_43 = { class: \"table mr-4 mt-5\" }\nconst _hoisted_44 = { style: {\"font-size\":\"1.5rem\",\"font-weight\":\"700\",\"color\":\"#495057\"} }\nconst _hoisted_45 = {\n  class: \"data-table\",\n  ref: \"tableRef\",\n  tableStyle: \"width: 100%\"\n}\nconst _hoisted_46 = { class: \"table mt-5\" }\nconst _hoisted_47 = { style: {\"font-size\":\"1.5rem\",\"font-weight\":\"700\",\"color\":\"#495057\"} }\nconst _hoisted_48 = { class: \"data-table\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Card = _resolveComponent(\"Card\")!\n  const _component_LineChart = _resolveComponent(\"LineChart\")!\n  const _component_BarChart = _resolveComponent(\"BarChart\")!\n  const _component_DoughnutChart = _resolveComponent(\"DoughnutChart\")!\n  const _component_HorizontalBarChart = _resolveComponent(\"HorizontalBarChart\")!\n  const _component_PieChart = _resolveComponent(\"PieChart\")!\n  const _component_Toolbar = _resolveComponent(\"Toolbar\")!\n  const _component_CountryFlag = _resolveComponent(\"CountryFlag\")!\n  const _component_Column = _resolveComponent(\"Column\")!\n  const _component_DataTable = _resolveComponent(\"DataTable\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"h1\", _hoisted_3, _toDisplayString(_ctx.$t('dashboard_page.title')), 1),\n      (!_ctx.isLoaded)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _hoisted_6))\n        : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n            _createElementVNode(\"div\", _hoisted_7, [\n              _createVNode(_component_Card, { class: \"mini-card col-md-4 mt-3 mr-5\" }, {\n                title: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$t('dashboard_page.card_total_net')), 1)\n                ]),\n                content: _withCtx(() => [\n                  _createElementVNode(\"div\", _hoisted_8, [\n                    (_ctx.countAllNetIncome !== 0)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, _toDisplayString(_ctx.formatCurrency(_ctx.countAllNetIncome.toString())) + \" USD \", 1))\n                      : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _toDisplayString(_ctx.$t('dashboard_page.empty_card')), 1)),\n                    _hoisted_11\n                  ])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_Card, { class: \"mini-card col-md-4 mt-3 mr-4\" }, {\n                title: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$t('dashboard_page.card_companies')), 1)\n                ]),\n                content: _withCtx(() => [\n                  _createElementVNode(\"div\", _hoisted_12, [\n                    (_ctx.totalCompaniesCounts > 0)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, _toDisplayString(_ctx.totalCompaniesCounts) + \" \" + _toDisplayString(_ctx.$t('dashboard_page.card_companies_description')), 1))\n                      : (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _toDisplayString(_ctx.$t('dashboard_page.empty_card')), 1)),\n                    _hoisted_15\n                  ])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_Card, { class: \"mini-card col-md-4 mt-3 mr-5\" }, {\n                title: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$t('dashboard_page.card_financials')), 1)\n                ]),\n                content: _withCtx(() => [\n                  _createElementVNode(\"div\", _hoisted_16, [\n                    (_ctx.totalFinancialsCounts > 0)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, _toDisplayString(_ctx.totalFinancialsCounts) + \" \" + _toDisplayString(_ctx.$t('dashboard_page.card_financials_description')), 1))\n                      : (_openBlock(), _createElementBlock(\"div\", _hoisted_18, _toDisplayString(_ctx.$t('dashboard_page.empty_card')), 1)),\n                    _hoisted_19\n                  ])\n                ]),\n                _: 1\n              }),\n              _createVNode(_component_Card, { class: \"mini-card col-md-4 mt-3\" }, {\n                title: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$t('dashboard_page.card_branches')), 1)\n                ]),\n                content: _withCtx(() => [\n                  _createElementVNode(\"div\", _hoisted_20, [\n                    (_ctx.totalBrancheCounts > 0)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, _toDisplayString(_ctx.totalBrancheCounts) + \" \" + _toDisplayString(_ctx.$t('dashboard_page.card_branches_description')), 1))\n                      : (_openBlock(), _createElementBlock(\"div\", _hoisted_22, _toDisplayString(_ctx.$t('dashboard_page.empty_card')), 1)),\n                    _hoisted_23\n                  ])\n                ]),\n                _: 1\n              })\n            ]),\n            _createElementVNode(\"div\", _hoisted_24, [\n              _createElementVNode(\"div\", _hoisted_25, [\n                _createVNode(_component_Card, { class: \"chart-card mr-4\" }, {\n                  title: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t('dashboard_page.card_line_graph')), 1)\n                  ]),\n                  content: _withCtx(() => [\n                    (_ctx.netIncomeChartData.labels.length > 0)\n                      ? (_openBlock(), _createBlock(_component_LineChart, {\n                          key: 0,\n                          chartData: _ctx.netIncomeChartData\n                        }, null, 8, [\"chartData\"]))\n                      : (_openBlock(), _createElementBlock(\"div\", _hoisted_26, _toDisplayString(_ctx.$t('dashboard_page.empty_card')), 1))\n                  ]),\n                  _: 1\n                })\n              ]),\n              _createElementVNode(\"div\", _hoisted_27, [\n                _createVNode(_component_Card, { class: \"chart-card\" }, {\n                  title: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t('dashboard_page.card_bars_branches')), 1)\n                  ]),\n                  content: _withCtx(() => [\n                    (_ctx.barChartData.labels.length > 0)\n                      ? (_openBlock(), _createBlock(_component_BarChart, {\n                          key: 0,\n                          chartData: _ctx.barChartData\n                        }, null, 8, [\"chartData\"]))\n                      : (_openBlock(), _createElementBlock(\"div\", _hoisted_28, _toDisplayString(_ctx.$t('dashboard_page.empty_card')), 1))\n                  ]),\n                  _: 1\n                })\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_29, [\n              _createElementVNode(\"div\", _hoisted_30, [\n                _createVNode(_component_Card, { class: \"small-chart-card mr-3\" }, {\n                  title: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t('dashboard_page.card_doughnuts_sector')), 1)\n                  ]),\n                  content: _withCtx(() => [\n                    (_ctx.expenseChartData.labels.length > 0)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [\n                          _createVNode(_component_DoughnutChart, { \"chart-data\": _ctx.sectorsChartData }, null, 8, [\"chart-data\"])\n                        ]))\n                      : (_openBlock(), _createElementBlock(\"div\", _hoisted_32, _toDisplayString(_ctx.$t('dashboard_page.empty_card')), 1))\n                  ]),\n                  _: 1\n                })\n              ]),\n              _createElementVNode(\"div\", _hoisted_33, [\n                _createVNode(_component_Card, { class: \"bar-chart-custom mr-3\" }, {\n                  title: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t('dashboard_page.card_horizontalbar_inactive')), 1)\n                  ]),\n                  content: _withCtx(() => [\n                    (_ctx.chartData.labels.length > 0)\n                      ? (_openBlock(), _createBlock(_component_HorizontalBarChart, {\n                          key: 0,\n                          \"chart-data\": _ctx.chartData\n                        }, null, 8, [\"chart-data\"]))\n                      : (_openBlock(), _createElementBlock(\"div\", _hoisted_34, _toDisplayString(_ctx.$t('dashboard_page.empty_card')), 1))\n                  ]),\n                  _: 1\n                })\n              ]),\n              _createVNode(_component_Card, { class: \"small-chart-card col-sm-6 mt-5\" }, {\n                title: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$t('dashboard_page.card_pie_net_income')) + \" - \" + _toDisplayString(_ctx.formattedDate), 1)\n                ]),\n                content: _withCtx(() => [\n                  (_ctx.pieChartData.labels.length > 0)\n                    ? (_openBlock(), _createBlock(_component_PieChart, {\n                        key: 0,\n                        \"chart-data\": _ctx.pieChartData\n                      }, null, 8, [\"chart-data\"]))\n                    : (_openBlock(), _createElementBlock(\"div\", _hoisted_35, _toDisplayString(_ctx.$t('dashboard_page.empty_card')), 1))\n                ]),\n                _: 1\n              })\n            ]),\n            _createElementVNode(\"div\", _hoisted_36, [\n              _createElementVNode(\"div\", _hoisted_37, [\n                _createVNode(_component_Card, { class: \"chart-card mt-5\" }, {\n                  title: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t('dashboard_page.card_line_revenue')), 1)\n                  ]),\n                  content: _withCtx(() => [\n                    (_ctx.revenueChartData.labels.length > 0)\n                      ? (_openBlock(), _createBlock(_component_LineChart, {\n                          key: 0,\n                          chartData: _ctx.revenueChartData\n                        }, null, 8, [\"chartData\"]))\n                      : (_openBlock(), _createElementBlock(\"div\", _hoisted_38, _toDisplayString(_ctx.$t('dashboard_page.empty_card')), 1))\n                  ]),\n                  _: 1\n                })\n              ]),\n              _createElementVNode(\"div\", _hoisted_39, [\n                _createElementVNode(\"div\", _hoisted_40, [\n                  _createVNode(_component_Card, { class: \"chart-card col-sm-6\" }, {\n                    title: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(_ctx.$t('dashboard_page.card_line_expense')), 1)\n                    ]),\n                    content: _withCtx(() => [\n                      (_ctx.expenseChartData.labels.length > 0)\n                        ? (_openBlock(), _createBlock(_component_LineChart, {\n                            key: 0,\n                            \"chart-data\": _ctx.expenseChartData\n                          }, null, 8, [\"chart-data\"]))\n                        : (_openBlock(), _createElementBlock(\"div\", _hoisted_41, _toDisplayString(_ctx.$t('dashboard_page.empty_card')), 1))\n                    ]),\n                    _: 1\n                  })\n                ])\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_42, [\n              _createElementVNode(\"div\", _hoisted_43, [\n                _createVNode(_component_Toolbar, null, {\n                  start: _withCtx(() => [\n                    _createElementVNode(\"label\", _hoisted_44, _toDisplayString(_ctx.$t('dashboard_page.table_top_countries')), 1)\n                  ]),\n                  _: 1\n                }),\n                _createElementVNode(\"div\", _hoisted_45, [\n                  _createVNode(_component_DataTable, {\n                    value: _ctx.countryCounts,\n                    paginator: true,\n                    rows: 10,\n                    tableStyle: \"width: 100%\"\n                  }, {\n                    empty: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(_ctx.$t('dashboard_page.table_column_country_empty')), 1)\n                    ]),\n                    default: _withCtx(() => [\n                      _createVNode(_component_Column, {\n                        field: \"country\",\n                        header: _ctx.$t('dashboard_page.table_column_country')\n                      }, {\n                        body: _withCtx(({ data }) => [\n                          _createVNode(_component_CountryFlag, {\n                            class: \"mr-1\",\n                            country: _ctx.getCountryCode(data.country)\n                          }, null, 8, [\"country\"]),\n                          _createElementVNode(\"span\", null, _toDisplayString(_ctx.getCountryName(data.country)), 1)\n                        ]),\n                        _: 1\n                      }, 8, [\"header\"]),\n                      _createVNode(_component_Column, {\n                        field: \"counts\",\n                        header: _ctx.$t('dashboard_page.table_column_count_branches')\n                      }, null, 8, [\"header\"])\n                    ]),\n                    _: 1\n                  }, 8, [\"value\"])\n                ], 512)\n              ]),\n              _createElementVNode(\"div\", _hoisted_46, [\n                _createVNode(_component_Toolbar, null, {\n                  start: _withCtx(() => [\n                    _createElementVNode(\"label\", _hoisted_47, _toDisplayString(_ctx.$t('dashboard_page.table_top_financials_earnings')) + \" - \" + _toDisplayString(_ctx.formattedDate), 1)\n                  ]),\n                  _: 1\n                }),\n                _createElementVNode(\"div\", _hoisted_48, [\n                  _createVNode(_component_DataTable, {\n                    value: _ctx.topEarnings,\n                    paginator: true,\n                    rows: 10\n                  }, {\n                    empty: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(_ctx.$t('dashboard_page.table_column_valuation_empty')), 1)\n                    ]),\n                    default: _withCtx(() => [\n                      _createVNode(_component_Column, {\n                        field: \"companyName\",\n                        header: _ctx.$t('dashboard_page.table_column_company')\n                      }, null, 8, [\"header\"]),\n                      _createVNode(_component_Column, {\n                        field: \"sector\",\n                        header: _ctx.$t('dashboard_page.table_column_sector')\n                      }, null, 8, [\"header\"]),\n                      _createVNode(_component_Column, {\n                        field: \"earnings\",\n                        header: _ctx.$t('dashboard_page.table_column_earnings')\n                      }, {\n                        body: _withCtx(({ data }) => [\n                          _createElementVNode(\"data\", null, _toDisplayString(_ctx.formatCurrency(data.earnings)), 1)\n                        ]),\n                        _: 1\n                      }, 8, [\"header\"]),\n                      _createVNode(_component_Column, {\n                        field: \"active\",\n                        header: _ctx.$t('dashboard_page.table_column_status')\n                      }, {\n                        body: _withCtx(({ data }) => [\n                          _createElementVNode(\"i\", {\n                            class: _normalizeClass([\"pi\", { 'pi-check-circle text-green-500': data.active === 1, 'pi-times-circle text-red-400': data.active === 0 }])\n                          }, null, 2)\n                        ]),\n                        _: 1\n                      }, 8, [\"header\"])\n                    ]),\n                    _: 1\n                  }, 8, [\"value\"])\n                ])\n              ])\n            ])\n          ], 64))\n    ])\n  ]))\n}","<template>\r\n    <div class=\"container\">\r\n        <div class=\"dashboard\">\r\n            <h1 class=\"title\">{{ $t('dashboard_page.title') }}</h1>\r\n            <template v-if=\"!isLoaded\">\r\n                <div class=\"spinner-container\">\r\n                    <i class=\"pi pi-spin pi-spinner large-spinner\" />\r\n                </div>\r\n            </template>\r\n            <template v-else>\r\n                <div class=\"dashboard-display row\">\r\n                    <Card class=\"mini-card col-md-4 mt-3 mr-5\">\r\n                        <template #title>{{ $t('dashboard_page.card_total_net') }}</template>\r\n                        <template #content>\r\n                            <div class=\"flex-card\">\r\n                                <template v-if=\"countAllNetIncome !== 0\">\r\n                                    <div class=\"flex-card-content\">\r\n                                        {{ formatCurrency(countAllNetIncome.toString()) }} USD\r\n                                    </div>\r\n                                </template>\r\n                                <template v-else>\r\n                                    <div class=\"flex-card-content\">\r\n                                        {{ $t('dashboard_page.empty_card') }}\r\n                                    </div>\r\n                                </template>\r\n                                <div class=\"flex-card-full\">\r\n                                    <i class=\"pi pi-money-bill\"\r\n                                        style=\"font-size: 3.5rem; color: rgb(200, 200, 200);\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                    </Card>\r\n                    <Card class=\"mini-card col-md-4 mt-3 mr-4\">\r\n                        <template #title>{{ $t('dashboard_page.card_companies') }}</template>\r\n                        <template #content>\r\n                            <div class=\"flex-card\">\r\n                                <template v-if=\"totalCompaniesCounts > 0\">\r\n                                    <div class=\"flex-card-content\">\r\n                                        {{ totalCompaniesCounts }} {{\r\n                $t('dashboard_page.card_companies_description') }}\r\n                                    </div>\r\n                                </template>\r\n                                <template v-else>\r\n                                    <div class=\"flex-card-content\">\r\n                                        {{ $t('dashboard_page.empty_card') }}\r\n                                    </div>\r\n                                </template>\r\n                                <div class=\"flex-card-full\">\r\n                                    <i class=\"pi pi-briefcase\"\r\n                                        style=\"font-size: 3.5rem; color: rgb(200, 200, 200);\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                    </Card>\r\n                    <Card class=\"mini-card col-md-4 mt-3 mr-5\">\r\n                        <template #title>{{ $t('dashboard_page.card_financials') }}</template>\r\n                        <template #content>\r\n                            <div class=\"flex-card\">\r\n                                <template v-if=\"totalFinancialsCounts > 0\">\r\n                                    <div class=\"flex-card-content\">\r\n                                        {{ totalFinancialsCounts }} {{\r\n                $t('dashboard_page.card_financials_description') }}\r\n                                    </div>\r\n                                </template>\r\n                                <template v-else>\r\n                                    <div class=\"flex-card-content\">\r\n                                        {{ $t('dashboard_page.empty_card') }}\r\n                                    </div>\r\n                                </template>\r\n                                <div class=\"flex-card-full\">\r\n                                    <i class=\"pi pi-dollar\" style=\"font-size: 3.5rem; color: rgb(200, 200, 200);\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                    </Card>\r\n                    <Card class=\"mini-card col-md-4 mt-3\">\r\n                        <template #title>{{ $t('dashboard_page.card_branches') }}</template>\r\n                        <template #content>\r\n                            <div class=\"flex-card\">\r\n                                <template v-if=\"totalBrancheCounts > 0\">\r\n                                    <div class=\"flex-card-content \">\r\n                                        {{ totalBrancheCounts }} {{\r\n                $t('dashboard_page.card_branches_description') }}\r\n                                    </div>\r\n                                </template>\r\n                                <template v-else>\r\n                                    <div class=\"flex-card-content\">\r\n                                        {{ $t('dashboard_page.empty_card') }}\r\n                                    </div>\r\n                                </template>\r\n                                <div class=\"flex-card-full\">\r\n                                    <i class=\"pi pi-building\" style=\"font-size: 3.5rem; color: rgb(200, 200, 200);\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                    </Card>\r\n                </div>\r\n                <div class=\"dashboard-display row\">\r\n                    <div class=\"col-md-4 col-sm-6 mt-5 mb-3\">\r\n                        <Card class=\"chart-card mr-4\">\r\n                            <template #title>{{ $t('dashboard_page.card_line_graph') }}</template>\r\n                            <template #content>\r\n                                <template v-if=\"netIncomeChartData.labels.length > 0\">\r\n                                    <LineChart :chartData=\"netIncomeChartData\" />\r\n                                </template>\r\n                                <template v-else>\r\n                                    <div class=\"empty-card\">\r\n                                        {{ $t('dashboard_page.empty_card') }}\r\n                                    </div>\r\n                                </template>\r\n                            </template>\r\n                        </Card>\r\n                    </div>\r\n                    <div class=\"col-md-4 col-sm-6 mt-5 mb-3\">\r\n                        <Card class=\"chart-card\">\r\n                            <template #title>{{ $t('dashboard_page.card_bars_branches') }}</template>\r\n                            <template #content>\r\n                                <template v-if=\"barChartData.labels.length > 0\">\r\n                                    <BarChart :chartData=\"barChartData\" />\r\n                                </template>\r\n                                <template v-else>\r\n                                    <div class=\"empty-card\">\r\n                                        {{ $t('dashboard_page.empty_card') }}\r\n                                    </div>\r\n                                </template>\r\n                            </template>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div class=\"dashboard-display\">\r\n                    <div class=\"col-md-4 col-sm-6 mt-5 mb-3\">\r\n                        <Card class=\"small-chart-card mr-3\">\r\n                            <template #title>{{ $t('dashboard_page.card_doughnuts_sector') }}</template>\r\n                            <template #content>\r\n                                <template v-if=\"expenseChartData.labels.length > 0\">\r\n                                    <div class=\"flex-card\">\r\n                                        <DoughnutChart :chart-data=\"sectorsChartData\" />\r\n                                    </div>\r\n                                </template>\r\n                                <template v-else>\r\n                                    <div class=\"empty-card\">\r\n                                        {{ $t('dashboard_page.empty_card') }}\r\n                                    </div>\r\n                                </template>\r\n                            </template>\r\n                        </Card>\r\n                    </div>\r\n                    <div class=\"col-md-4 col-sm-6 mt-5 mb-3\">\r\n                        <Card class=\"bar-chart-custom mr-3\">\r\n                            <template #title>{{ $t('dashboard_page.card_horizontalbar_inactive') }}</template>\r\n                            <template #content>\r\n                                <template v-if=\"chartData.labels.length > 0\">\r\n                                    <HorizontalBarChart :chart-data=\"chartData\" />\r\n                                </template>\r\n                                <template v-else>\r\n                                    <div class=\"empty-card\">\r\n                                        {{ $t('dashboard_page.empty_card') }}\r\n                                    </div>\r\n                                </template>\r\n                            </template>\r\n                        </Card>\r\n                    </div>\r\n                    <Card class=\"small-chart-card col-sm-6 mt-5\">\r\n                        <template #title>{{ $t('dashboard_page.card_pie_net_income') }} - {{ formattedDate\r\n                            }}</template>\r\n                        <template #content>\r\n                            <template v-if=\"pieChartData.labels.length > 0\">\r\n                                <PieChart :chart-data=\"pieChartData\"></PieChart>\r\n                            </template>\r\n                            <template v-else>\r\n                                <div class=\"empty-card\">\r\n                                    {{ $t('dashboard_page.empty_card') }}\r\n                                </div>\r\n                            </template>\r\n                        </template>\r\n                    </Card>\r\n                </div>\r\n                <div class=\"dashboard-display\">\r\n                    <div class=\"card-branche-company mr-4\">\r\n                        <Card class=\"chart-card mt-5\">\r\n                            <template #title>{{ $t('dashboard_page.card_line_revenue') }}</template>\r\n                            <template #content>\r\n                                <template v-if=\"revenueChartData.labels.length > 0\">\r\n                                    <LineChart :chartData=\"revenueChartData\" />\r\n                                </template>\r\n                                <template v-else>\r\n                                    <div class=\"empty-card\">\r\n                                        {{ $t('dashboard_page.empty_card') }}\r\n                                    </div>\r\n                                </template>\r\n                            </template>\r\n                        </Card>\r\n                    </div>\r\n                    <div class=\"card-branche-company mr-3\">\r\n                        <div class=\"col-md-4 mt-5 mb-3\">\r\n                            <Card class=\"chart-card col-sm-6\">\r\n                                <template #title>{{ $t('dashboard_page.card_line_expense') }}</template>\r\n                                <template #content>\r\n                                    <template v-if=\"expenseChartData.labels.length > 0\">\r\n                                        <LineChart :chart-data=\"expenseChartData\" />\r\n                                    </template>\r\n                                    <template v-else>\r\n                                        <div class=\"empty-card\">\r\n                                            {{ $t('dashboard_page.empty_card') }}\r\n                                        </div>\r\n                                    </template>\r\n                                </template>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"dashboard-display\">\r\n                    <div class=\"table mr-4 mt-5\">\r\n                        <Toolbar>\r\n                            <template #start>\r\n                                <label style=\"font-size: 1.5rem; font-weight: 700; color: #495057\">{{\r\n                $t('dashboard_page.table_top_countries') }}</label>\r\n                            </template>\r\n                        </Toolbar>\r\n                        <div class=\"data-table\" ref=\"tableRef\" tableStyle=\"width: 100%\">\r\n                            <DataTable :value=\"countryCounts\" :paginator=\"true\" :rows=\"10\" tableStyle=\"width: 100%\">\r\n                                <template #empty>{{ $t('dashboard_page.table_column_country_empty') }}</template>\r\n                                <Column field=\"country\" :header=\"$t('dashboard_page.table_column_country')\">\r\n                                    <template #body=\"{ data }\">\r\n                                        <CountryFlag class=\"mr-1\" :country=\"getCountryCode(data.country)\">\r\n                                        </CountryFlag>\r\n                                        <span> {{ getCountryName(data.country) }}</span>\r\n                                    </template>\r\n                                </Column>\r\n                                <Column field=\"counts\" :header=\"$t('dashboard_page.table_column_count_branches')\">\r\n                                </Column>\r\n                            </DataTable>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"table mt-5\">\r\n                        <Toolbar>\r\n                            <template #start>\r\n                                <label style=\"font-size: 1.5rem; font-weight: 700; color: #495057\">{{\r\n                $t('dashboard_page.table_top_financials_earnings') }} - {{ formattedDate\r\n                                    }}</label>\r\n                            </template>\r\n                        </Toolbar>\r\n                        <div class=\"data-table\">\r\n                            <DataTable :value=\"topEarnings\" :paginator=\"true\" :rows=\"10\">\r\n                                <template #empty>{{ $t('dashboard_page.table_column_valuation_empty') }}</template>\r\n                                <Column field=\"companyName\" :header=\"$t('dashboard_page.table_column_company')\" />\r\n                                <Column field=\"sector\" :header=\"$t('dashboard_page.table_column_sector')\" />\r\n                                <Column field=\"earnings\" :header=\"$t('dashboard_page.table_column_earnings')\">\r\n                                    <template #body=\"{ data }\">\r\n                                        <data>{{ formatCurrency(data.earnings) }}</data>\r\n                                    </template>\r\n                                </Column>\r\n                                <Column field=\"active\" :header=\"$t('dashboard_page.table_column_status')\">\r\n                                    <template #body=\"{ data }\">\r\n                                        <i class=\"pi\"\r\n                                            :class=\"{ 'pi-check-circle text-green-500': data.active === 1, 'pi-times-circle text-red-400': data.active === 0 }\" />\r\n                                    </template>\r\n                                </Column>\r\n                            </DataTable>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </template>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref, watch, onMounted } from 'vue';\r\n\r\nimport axiosInstance from '@/http';\r\nimport HorizontalBarChart from '../components/HorizontalBarChart.vue';\r\nimport randomColor from 'randomcolor';\r\nimport DoughnutChart from '../components/DoughnutChart.vue';\r\nimport LineChart from '../components/LineChart.vue'\r\nimport BarChart from '../components/BarChart.vue';\r\nimport PieChart from '@/components/PieChart.vue';\r\nimport IUsers from '@/interfaces/IUsers';\r\nimport IFinancial from '@/interfaces/IFinancial';\r\nimport IBranch from '@/interfaces/IBranch';\r\nimport ICompany from '@/interfaces/ICompany';\r\nimport router from '@/router';\r\nimport { useI18n } from 'vue-i18n';\r\nimport { useStore } from 'vuex';\r\nimport { watchEffect } from 'vue';\r\n\r\nexport default defineComponent({\r\n    name: 'HomePage',\r\n    components: {\r\n        HorizontalBarChart,\r\n        LineChart,\r\n        DoughnutChart,\r\n        PieChart,\r\n        BarChart\r\n    },\r\n    setup() {\r\n        const { locale } = useI18n();\r\n        const formattedDate = ref('');\r\n\r\n        function capitalizeFirstLetter(date: string) {\r\n            return date.charAt(0).toUpperCase() + date.slice(1);\r\n        }\r\n\r\n        watch(locale, () => {\r\n            const date = new Date();\r\n            const month = date.toLocaleString(locale.value, { month: 'long' });\r\n            const capitalizedMonth = capitalizeFirstLetter(month);\r\n            formattedDate.value = date.toLocaleString(locale.value, { month: 'long' }).replace(month, capitalizedMonth);\r\n        });\r\n\r\n        onMounted(() => {\r\n            const date = new Date();\r\n            const month = date.toLocaleString(locale.value, { month: 'long' });\r\n            const capitalizedMonth = capitalizeFirstLetter(month);\r\n            formattedDate.value = date.toLocaleString(locale.value, { month: 'long' }).replace(month, capitalizedMonth);\r\n        });\r\n\r\n        return { formattedDate };\r\n    },\r\n    data() {\r\n        return {\r\n            user: {} as IUsers,\r\n            branches: [] as IBranch[],\r\n            companies: [] as ICompany[],\r\n            financials: [] as IFinancial[],\r\n            topCountryBranche: [] as IBranch[],\r\n            topEarnings: [] as { companyName: string; sector: string; active: number; earnings: number }[],\r\n            countryCounts: [] as { country: string, counts: number }[],\r\n            totalCompaniesCounts: 0,\r\n            totalBrancheCounts: 0,\r\n            totalFinancialsCounts: 0,\r\n            countAllNetIncome: 0,\r\n            userIdentify: 0,\r\n            isLoaded: false,\r\n            userNameIdentify: '',\r\n            netIncomeChartData: {\r\n                labels: [] as string[],\r\n                datasets: [\r\n                    {\r\n                        label: \"Net Income\",\r\n                        data: [] as number[],\r\n                        fill: false,\r\n                        borderColor: \"rgb(75, 192, 192)\",\r\n                        tension: 0.1\r\n                    }\r\n                ]\r\n            },\r\n            chartData: {\r\n                labels: [] as string[],\r\n                datasets: [\r\n                    {\r\n                        label: \"Branche\",\r\n                        backgroundColor: [] as string[],\r\n                        borderColor: \"rgb(255, 255, 255)\",\r\n                        borderWidth: 1,\r\n                        data: [] as number[],\r\n                    },\r\n                ],\r\n            },\r\n            barChartData: {\r\n                labels: [] as string[],\r\n                datasets: [\r\n                    {\r\n                        label: '',\r\n                        backgroundColor: [] as string[],\r\n                        borderColor: \"rgb(255, 255, 255)\",\r\n                        borderWidth: 1,\r\n                        data: [] as number[],\r\n                    }\r\n                ]\r\n            },\r\n            valuationChartData: {\r\n                labels: [] as string[],\r\n                datasets: [\r\n                    {\r\n                        label: \"Valuation das Empresas\",\r\n                        backgroundColor: [] as string[],\r\n                        borderColor: [] as string[],\r\n                        borderWidth: 1,\r\n                        data: [] as number[],\r\n                    },\r\n                ],\r\n            },\r\n            expenseChartData: {\r\n                labels: [] as string[],\r\n                datasets: [\r\n                    {\r\n                        label: \"Revenue Counts\",\r\n                        data: [] as number[],\r\n                        fill: false,\r\n                        borderColor: \"rgb(75, 192, 192)\",\r\n                        tension: 0.1\r\n                    }\r\n                ]\r\n            },\r\n            pieChartData: {\r\n                labels: [] as string[],\r\n                datasets: [\r\n                    {\r\n                        label: \"\",\r\n                        data: [] as number[],\r\n                        backgroundColor: [] as string[],\r\n                        fill: false,\r\n                        tension: 0.1\r\n                    }\r\n                ]\r\n            },\r\n            revenueChartData: {\r\n                labels: [] as string[],\r\n                datasets: [\r\n                    {\r\n                        label: \"Revenue Counts\",\r\n                        data: [] as number[],\r\n                        fill: false,\r\n                        borderColor: \"rgb(75, 192, 192)\",\r\n                        tension: 0.1\r\n                    }\r\n                ]\r\n            },\r\n            sectorsChartData: {\r\n                labels: [] as string[],\r\n                datasets: [\r\n                    {\r\n                        label: \"Sectors\",\r\n                        data: [] as number[],\r\n                        fill: false,\r\n                        backgroundColor: \"\",\r\n                        tension: 0.1\r\n                    }\r\n                ]\r\n            },\r\n            monthNames: {\r\n                br: [\"Janeiro\", \"Fevereiro\", \"March\", \"Abril\", \"Maio\", \"Junho\",\r\n                    \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\r\n                en: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n                    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n            },\r\n            countries: [\r\n                { name: this.$t('countries.brazil'), code: 'br' },\r\n                { name: this.$t('countries.united_states'), code: 'us' },\r\n                { name: this.$t('countries.france'), code: 'fr' },\r\n                { name: this.$t('countries.germany'), code: 'de' },\r\n                { name: this.$t('countries.japan'), code: 'jp' },\r\n                { name: this.$t('countries.italy'), code: 'it' },\r\n                { name: this.$t('countries.portugal'), code: 'pt' },\r\n            ]\r\n\r\n        };\r\n    },\r\n    created() {\r\n        const store = useStore();\r\n        const userId = store.state.userId;\r\n        const userName = store.state.userName;\r\n        if (!userId && !userName) {\r\n            router.push('/');\r\n        }\r\n        this.userIdentify = userId;\r\n        this.userNameIdentify = userName;\r\n    },\r\n    async mounted() {\r\n        if (this.userIdentify) {\r\n            await this.fetchUsers();\r\n            await this.fetchBranches();\r\n            await this.fetchCompanies();\r\n            await this.fetchFinancials();\r\n            this.calculateBrancheAmounts();\r\n            this.calculateBrancheAmounts(true);\r\n            this.calculateTopCountryBranches();\r\n            this.calculateRevenueCounts();\r\n            this.calculateExpenseAmounts();\r\n            this.calculateNetIncome();\r\n            this.calculateTopEarnings();\r\n            this.calculateCompaniesCounts();\r\n            this.calculateBrancheCounts();\r\n            this.calculateFinancialCounts();\r\n            this.calculateSectorCounts();\r\n            this.calculateAllNetIncome();\r\n            this.calculateNetIncomePerCategories();\r\n            this.isLoaded = true;\r\n        }\r\n    },\r\n    methods: {\r\n        async fetchUsers() {\r\n            try {\r\n                const response = await axiosInstance.get(`/user/${this.userIdentify}`);\r\n                this.user = response.data as IUsers;\r\n            } catch (error) {\r\n                console.error('Error fetching user', error);\r\n            }\r\n        },\r\n        async fetchCompanies() {\r\n            try {\r\n                const response = await axiosInstance.get('/company');\r\n                this.companies = response.data as ICompany[];\r\n                this.companies = this.companies.filter(company => this.user.companies.includes(company._id));\r\n\r\n                this.valuationChartData.datasets[0].backgroundColor = this.companies.map(() => randomColor());\r\n                this.valuationChartData.datasets[0].borderColor = this.companies.map(() => randomColor());\r\n                this.valuationChartData.datasets[0].data = this.companies.map(company => company.valuation || 0);\r\n                this.valuationChartData.labels = this.companies.map(company => company.name);\r\n            } catch (error) {\r\n                console.error('Error fetching companies:', error);\r\n            }\r\n        },\r\n        async fetchBranches() {\r\n            try {\r\n                const response = await axiosInstance.get('/branch');\r\n                this.branches = response.data as IBranch[];\r\n                this.branches = this.branches.filter(branche => this.user.branches.includes(branche._id));\r\n            } catch (error) {\r\n                console.error('Error fetching branches:', error);\r\n            }\r\n        },\r\n        async fetchFinancials() {\r\n            try {\r\n                const response = await axiosInstance.get('/financial');\r\n                this.financials = response.data as IFinancial[];\r\n                this.financials = this.financials.filter(financial => this.user.financials.includes(financial._id));\r\n            } catch (error) {\r\n                console.error('Error fetchin financials', error);\r\n            }\r\n        },\r\n        randomColor() {\r\n            return `rgba(${Math.floor(Math.random() * 300)}, ${Math.floor(Math.random() * 300)}, ${Math.floor(Math.random() * 300)}, 0.5)`;\r\n        },\r\n        getCountryName(countryCode: string): string {\r\n            const country = this.countries.find(c => c.code === countryCode);\r\n            return country ? country.name : '';\r\n        },\r\n        formatDate(dateString: string) {\r\n            return dateString ? new Date(dateString).toLocaleDateString('en-US', { month: '2-digit', day: '2-digit', year: 'numeric' }) : '';\r\n        },\r\n        calculateCompaniesCounts() {\r\n            const totalCompanies = this.companies.length;\r\n            this.totalCompaniesCounts = totalCompanies;\r\n        },\r\n        calculateBrancheCounts() {\r\n            const totalBranches = this.branches.length;\r\n            this.totalBrancheCounts = totalBranches;\r\n        },\r\n        calculateFinancialCounts() {\r\n            const totalFinancials = this.financials.length;\r\n            this.totalFinancialsCounts = totalFinancials;\r\n        },\r\n        calculateTopEarnings() {\r\n            const currentMonth = new Date().getMonth() + 1;\r\n            const currentYear = new Date().getFullYear();\r\n\r\n            const earningsMap = this.financials.reduce((acc, financial) => {\r\n                const dateParts = this.formatDate(financial.date).split('/');\r\n                const month = parseInt(dateParts[0]);\r\n                const year = parseInt(dateParts[2]);\r\n\r\n                if (month === currentMonth && year === currentYear) {\r\n                    const brancheId = financial.branch_id;\r\n                    const branche = this.branches.find(branche => branche._id === brancheId);\r\n                    const companyId = branche ? branche.company_id : 'Unknown';\r\n\r\n                    const company = this.companies.find(company => company._id === companyId);\r\n                    const companyName = company ? company.name : 'Unknown';\r\n\r\n                    const currentEarnings = acc.get(companyName) || 0;\r\n                    if (financial.type === 1) {\r\n                        acc.set(companyName, currentEarnings + financial.amount);\r\n                    } else if (financial.type === 2) {\r\n                        acc.set(companyName, currentEarnings - financial.amount);\r\n                    }\r\n                }\r\n                return acc;\r\n            }, new Map());\r\n\r\n            this.topEarnings = Array.from(earningsMap.entries())\r\n                .sort((a, b) => b[1] - a[1])\r\n                .map(([companyName, earnings]) => {\r\n                    const company = this.companies.find(company => company.name === companyName);\r\n                    const active = company ? company.active : 0;\r\n                    const sector = company ? company.sector : 'Unknown';\r\n                    return { companyName, earnings, active, sector };\r\n                });\r\n        },\r\n        calculateNetIncomePerCategories() {\r\n            const currentMonth = new Date().getMonth() + 1;\r\n            const currentYear = new Date().getFullYear();\r\n\r\n            const netIncomeMap = this.financials.reduce((acc, financial) => {\r\n                const dateParts = this.formatDate(financial.date).split('/');\r\n                const month = parseInt(dateParts[0]);\r\n                const year = parseInt(dateParts[2]);\r\n\r\n                if (month === currentMonth && year === currentYear) {\r\n                    const brancheId = financial.branch_id;\r\n                    const branche = this.branches.find(branche => branche._id === brancheId);\r\n                    const companyId = branche ? branche.company_id : 'Unknown';\r\n\r\n                    const company = this.companies.find(company => company._id === companyId);\r\n                    const companySector = company ? company.sector : 'Unknown';\r\n\r\n                    const currentNetIncome = acc.get(companySector) || 0;\r\n                    if (financial.type === 1) {\r\n                        acc.set(companySector, currentNetIncome + financial.amount);\r\n                    } else if (financial.type === 2) {\r\n                        acc.set(companySector, currentNetIncome - financial.amount);\r\n                    }\r\n                }\r\n\r\n                return acc;\r\n            }, new Map());\r\n\r\n            this.pieChartData.labels = [...netIncomeMap.keys()];\r\n            this.pieChartData.datasets[0].data = [...netIncomeMap.values()];\r\n            this.pieChartData.datasets[0].backgroundColor = Array.from(netIncomeMap.keys(), () => randomColor());\r\n        },\r\n        calculateNetIncome() {\r\n            const locale = this.$i18n.locale as keyof typeof this.monthNames;\r\n            const monthNames = this.monthNames[locale];\r\n            const netIncomeAmounts = this.financials.reduce((acc, financial) => {\r\n                const dateParts = this.formatDate(financial.date).split('/');\r\n                const month = parseInt(dateParts[0]);\r\n                const year = parseInt(dateParts[2]);\r\n                const key = `${monthNames[month - 1]} ${year}`;\r\n\r\n                const brancheId = financial.branch_id;\r\n                const branche = this.branches.find(branche => branche._id === brancheId);\r\n                const companyId = branche ? branche.company_id : 'Unknown';\r\n                const company = this.companies.find(company => company._id === companyId);\r\n                const companyName = company ? company.name : 'Unknown';\r\n\r\n                const companyKey = `${companyId}-${companyName}-${key}`;\r\n                const currentAmount = acc[companyKey] || 0;\r\n\r\n                if (financial.type === 1) {\r\n                    acc[companyKey] = currentAmount + financial.amount;\r\n                } else if (financial.type === 2) {\r\n                    acc[companyKey] = currentAmount - financial.amount;\r\n                }\r\n\r\n                return acc;\r\n            }, {} as Record<string, number>);\r\n\r\n            const groupedAmounts = Object.keys(netIncomeAmounts).reduce((acc, key) => {\r\n                const [companyId, companyName, monthYear] = key.split('-');\r\n                const currentData = acc[companyName] || { labels: [], data: [] };\r\n                currentData.labels.push(monthYear);\r\n                currentData.data.push(netIncomeAmounts[key]);\r\n                acc[companyName] = currentData;\r\n                return acc;\r\n            }, {} as Record<string, { labels: string[]; data: number[] }>);\r\n\r\n            const datasets = Object.keys(groupedAmounts).map(companyName => {\r\n                const companyData = groupedAmounts[companyName];\r\n                return {\r\n                    label: `${companyName}`,\r\n                    data: companyData.data,\r\n                    fill: false,\r\n                    borderColor: randomColor(),\r\n                    tension: 0.1\r\n                };\r\n            });\r\n\r\n            this.netIncomeChartData.labels = Array.from(new Set(Object.values(groupedAmounts).flatMap(data => data.labels))).sort().reverse();\r\n            this.netIncomeChartData.datasets = datasets;\r\n        },\r\n        calculateAllNetIncome() {\r\n            this.countAllNetIncome = this.financials.reduce((acc, financial) => {\r\n                const multiplier = financial.type === 2 ? -1 : 1;\r\n                acc += multiplier * financial.amount;\r\n                return acc;\r\n            }, 0);\r\n        },\r\n        formatCurrency(value?: string): string {\r\n            const numericValue = parseFloat(value ?? '');\r\n            return '$' + numericValue.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n        },\r\n\r\n        calculateExpenseAmounts() {\r\n            const locale = this.$i18n.locale as keyof typeof this.monthNames;\r\n            const monthNames = this.monthNames[locale];\r\n            const expenseAmounts = this.financials.reduce((acc, financial) => {\r\n                const dateParts = this.formatDate(financial.date).split('/');\r\n                const month = parseInt(dateParts[0]);\r\n                const year = parseInt(dateParts[2]);\r\n                const key = `${monthNames[month - 1]} ${year}`;\r\n\r\n                if (financial.type === 2) {\r\n                    const brancheId = financial.branch_id;\r\n                    const branche = this.branches.find(branche => branche._id === brancheId);\r\n                    const companyId = branche ? branche.company_id : 'Unknown';\r\n                    const company = this.companies.find(company => company._id === companyId);\r\n                    const companyName = company ? company.name : 'Unknown';\r\n\r\n                    const companyKey = `${companyId}-${companyName}-${key}`;\r\n                    const currentAmount = acc[companyKey] || 0;\r\n                    acc[companyKey] = currentAmount + financial.amount;\r\n                }\r\n\r\n                return acc;\r\n            }, {} as Record<string, number>);\r\n\r\n            const groupedAmounts = Object.keys(expenseAmounts).reduce((acc, key) => {\r\n                const [companyId, companyName, monthYear] = key.split('-');\r\n                const currentData = acc[companyName] || { labels: [], data: [] };\r\n                currentData.labels.push(monthYear);\r\n                currentData.data.push(expenseAmounts[key]);\r\n                acc[companyName] = currentData;\r\n                return acc;\r\n            }, {} as Record<string, { labels: string[]; data: number[] }>);\r\n\r\n            const datasets = Object.keys(groupedAmounts).map(companyName => {\r\n                const companyData = groupedAmounts[companyName];\r\n                return {\r\n                    label: `${companyName}`,\r\n                    data: companyData.data,\r\n                    fill: false,\r\n                    borderColor: randomColor(),\r\n                    tension: 0.1\r\n                };\r\n            });\r\n\r\n            this.expenseChartData.labels = Array.from(new Set(Object.values(groupedAmounts).flatMap(data => data.labels))).sort().reverse();\r\n            this.expenseChartData.datasets = datasets;\r\n        },\r\n\r\n        calculateRevenueCounts() {\r\n            const locale = this.$i18n.locale as keyof typeof this.monthNames;\r\n            const monthNames = this.monthNames[locale];\r\n            const revenueAmounts = this.financials.reduce((acc, financial) => {\r\n                const dateParts = this.formatDate(financial.date).split('/');\r\n                const month = parseInt(dateParts[0]);\r\n                const year = parseInt(dateParts[2]);\r\n                const key = `${monthNames[month - 1]} ${year}`;\r\n\r\n                if (financial.type === 1) {\r\n                    const brancheId = financial.branch_id;\r\n                    const branche = this.branches.find(branche => branche._id === brancheId);\r\n                    const companyId = branche ? branche.company_id : 'Unknown';\r\n                    const company = this.companies.find(company => company._id === companyId);\r\n                    const companyName = company ? company.name : 'Unknown';\r\n\r\n                    const companyKey = `${companyId}-${companyName}-${key}`;\r\n                    const currentAmount = acc[companyKey] || 0;\r\n                    acc[companyKey] = currentAmount + financial.amount;\r\n                }\r\n\r\n                return acc;\r\n            }, {} as Record<string, number>);\r\n\r\n            const groupedAmounts = Object.keys(revenueAmounts).reduce((acc, key) => {\r\n                const [companyId, companyName, monthYear] = key.split('-');\r\n                const currentData = acc[companyName] || { labels: [], data: [] };\r\n                currentData.labels.push(monthYear);\r\n                currentData.data.push(revenueAmounts[key]);\r\n                acc[companyName] = currentData;\r\n                return acc;\r\n            }, {} as Record<string, { labels: string[]; data: number[] }>);\r\n\r\n            const datasets = Object.keys(groupedAmounts).map(companyName => {\r\n                const companyData = groupedAmounts[companyName];\r\n                return {\r\n                    label: `${companyName}`,\r\n                    data: companyData.data,\r\n                    fill: false,\r\n                    borderColor: randomColor(),\r\n                    tension: 0.1\r\n                };\r\n            });\r\n\r\n            this.revenueChartData.labels = Array.from(new Set(Object.values(groupedAmounts).flatMap(data => data.labels))).sort().reverse();\r\n            this.revenueChartData.datasets = datasets;\r\n        },\r\n        calculateBrancheAmounts(isOnlyInactive = false) {\r\n            const branchesToConsider = isOnlyInactive ? this.branches.filter(branche => branche.active === 0) : this.branches;\r\n            const brancheCounts = branchesToConsider.reduce((acc, branche) => {\r\n                const companyId = branche.company_id;\r\n                acc.set(companyId, (acc.get(companyId) || 0) + 1);\r\n                return acc;\r\n            }, new Map());\r\n\r\n            if (isOnlyInactive) {\r\n                this.chartData.labels = this.companies\r\n                    .filter(company => brancheCounts.get(company._id) > 0)\r\n                    .map(company => company.name);\r\n                this.chartData.datasets[0].data = this.companies\r\n                    .filter(company => brancheCounts.get(company._id) > 0)\r\n                    .map(company => brancheCounts.get(company._id) || 0);\r\n                this.chartData.datasets[0].backgroundColor = this.companies.map(() => randomColor());\r\n            } else {\r\n                this.barChartData.labels = this.companies.map(company => company.name);\r\n                this.barChartData.datasets[0].data = this.companies.map(company => brancheCounts.get(company._id) || 0);\r\n                this.barChartData.datasets[0].backgroundColor = this.companies.map(() => randomColor());\r\n            }\r\n        },\r\n        calculateSectorCounts() {\r\n            const sectorCounts = this.companies.reduce((acc, company) => {\r\n                const sector = company.sector;\r\n                acc.set(sector, (acc.get(sector) || 0) + 1);\r\n                return acc;\r\n            }, new Map());\r\n\r\n            const labels = Array.from(sectorCounts.keys());\r\n            const data = Array.from(sectorCounts.values());\r\n\r\n            const datasets = [{\r\n                label: \"Sectors\",\r\n                data: data,\r\n                backgroundColor: labels.map(() => randomColor()),\r\n                borderColor: \"rgb(255, 255, 255)\",\r\n                borderWidth: 1,\r\n                fill: false,\r\n                tension: 0.1\r\n            }];\r\n\r\n            this.sectorsChartData.labels = labels;\r\n            this.sectorsChartData.datasets = datasets as [];\r\n        },\r\n        getCountryCode(countryName: string): string {\r\n            const country = this.countries.find(c => c.code === countryName);\r\n            return country ? country.code : '';\r\n        },\r\n\r\n        calculateTopCountryBranches() {\r\n            const countryCounts = Array.from(this.branches.reduce((acc, branch) => {\r\n                const branchCountry = branch.country;\r\n                acc.set(branchCountry, (acc.get(branchCountry) || 0) + 1);\r\n                return acc;\r\n            }, new Map()), ([country, counts]) => ({ country, counts }));\r\n\r\n            this.countryCounts = countryCounts.sort((a, b) => b.counts - a.counts);\r\n        },\r\n    }\r\n});\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.ml-custom {\r\n    margin-left: 5px;\r\n}\r\n\r\n.dashboard {\r\n    width: 100%;\r\n}\r\n\r\n.flex-container {\r\n    display: flex;\r\n}\r\n\r\n.empty-card {\r\n    height: 344px;\r\n}\r\n\r\n.small-chart-card {\r\n    width: 25rem;\r\n    height: 30rem;\r\n}\r\n\r\n.bar-chart-custom {\r\n    width: 49.5rem;\r\n    height: 30rem;\r\n}\r\n\r\n.chart-card {\r\n    width: 50rem;\r\n    height: 30rem;\r\n}\r\n\r\n.mini-card {\r\n    width: 24rem;\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n    width: 99%;\r\n}\r\n\r\n.flex-card {\r\n    display: flex;\r\n}\r\n\r\n.flex-card-content {\r\n    flex-grow: 0;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.flex-card-full {\r\n    flex-grow: 1;\r\n    display: flex;\r\n    justify-content: right;\r\n    align-items: center;\r\n}\r\n\r\n.table {\r\n    width: 50rem;\r\n}\r\n\r\n.dashboard-display {\r\n    display: flex;\r\n    width: 100%;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .dashboard-display {\r\n        display: contents;\r\n        flex-wrap: wrap;\r\n        width: 100%;\r\n    }\r\n\r\n    .chart-card,\r\n    .mini-card,\r\n    .bar-chart-custom,\r\n    .small-chart-card,\r\n    .data-table,\r\n    .table {\r\n        width: 100%;\r\n        max-width: 22rem;\r\n        height: auto;\r\n    }\r\n}\r\n</style>","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Chart = _resolveComponent(\"Chart\")!\n\n  return (_openBlock(), _createBlock(_component_Chart, {\n    type: \"bar\",\n    data: _ctx.chartData,\n    options: _ctx.chartOptions\n  }, null, 8, [\"data\", \"options\"]))\n}","<template>\r\n    <Chart type=\"bar\" :data=\"chartData\" :options=\"chartOptions\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\nimport Chart from 'primevue/chart';\r\n\r\nexport default defineComponent({\r\n    name: 'HorizontalBarChart',\r\n    created() {\r\n        this.chartData;\r\n    },\r\n    props: {\r\n        chartData: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n    },\r\n    components: {\r\n        Chart\r\n    },\r\n    data() {\r\n        return {\r\n            chartOptions: {\r\n                indexAxis: 'y',\r\n                responsive: true,\r\n                plugins: {\r\n                    legend: {\r\n                        display: false\r\n                    },\r\n                },\r\n                scales: {\r\n                    x: {\r\n                        ticks: {\r\n                            color: \"grey\",\r\n                            callback: function (value: number) {\r\n                                if (value % 1 === 0) {\r\n                                    return value;\r\n                                }\r\n                            },\r\n                        },\r\n                        grid: {\r\n                            display: false,\r\n                            drawBorder: false\r\n                        },\r\n                    },\r\n                    y: {\r\n                        beginAtZero: true,\r\n                        grid: {\r\n                            color: \"rgb(250, 250, 250)\",\r\n                            drawBorder: false\r\n                        },\r\n\r\n                    },\r\n\r\n                },\r\n\r\n            },\r\n        }\r\n    },\r\n\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.flag-icon {\r\n    width: 1.5em;\r\n    height: auto;\r\n}\r\n</style>","import BaseStyle from 'primevue/base/style';\n\nvar inlineStyles = {\n  root: {\n    position: 'relative'\n  }\n};\nvar classes = {\n  root: 'p-chart'\n};\nvar ChartStyle = BaseStyle.extend({\n  name: 'chart',\n  inlineStyles: inlineStyles,\n  classes: classes\n});\n\nexport { ChartStyle as default };\n","import BaseComponent from 'primevue/basecomponent';\nimport ChartStyle from 'primevue/chart/style';\nimport { openBlock, createElementBlock, mergeProps, createElementVNode } from 'vue';\n\nvar script$1 = {\n  name: 'BaseChart',\n  \"extends\": BaseComponent,\n  props: {\n    type: String,\n    data: null,\n    options: null,\n    plugins: null,\n    width: {\n      type: Number,\n      \"default\": 300\n    },\n    height: {\n      type: Number,\n      \"default\": 150\n    },\n    canvasProps: {\n      type: null,\n      \"default\": null\n    }\n  },\n  style: ChartStyle,\n  provide: function provide() {\n    return {\n      $parentInstance: this\n    };\n  }\n};\n\nvar script = {\n  name: 'Chart',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['select', 'loaded'],\n  chart: null,\n  watch: {\n    /*\n     * Use deep watch to enable triggering watch for changes within structure\n     * otherwise the entire data object needs to be replaced to trigger watch\n     */\n    data: {\n      handler: function handler() {\n        this.reinit();\n      },\n      deep: true\n    },\n    type: function type() {\n      this.reinit();\n    },\n    options: function options() {\n      this.reinit();\n    }\n  },\n  mounted: function mounted() {\n    this.initChart();\n  },\n  beforeUnmount: function beforeUnmount() {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = null;\n    }\n  },\n  methods: {\n    initChart: function initChart() {\n      var _this = this;\n      import('chart.js/auto').then(function (module) {\n        if (_this.chart) {\n          _this.chart.destroy();\n          _this.chart = null;\n        }\n        if (module && module[\"default\"]) {\n          _this.chart = new module[\"default\"](_this.$refs.canvas, {\n            type: _this.type,\n            data: _this.data,\n            options: _this.options,\n            plugins: _this.plugins\n          });\n        }\n        _this.$emit('loaded', _this.chart);\n      });\n    },\n    getCanvas: function getCanvas() {\n      return this.$canvas;\n    },\n    getChart: function getChart() {\n      return this.chart;\n    },\n    getBase64Image: function getBase64Image() {\n      return this.chart.toBase64Image();\n    },\n    refresh: function refresh() {\n      if (this.chart) {\n        this.chart.update();\n      }\n    },\n    reinit: function reinit() {\n      this.initChart();\n    },\n    onCanvasClick: function onCanvasClick(event) {\n      if (this.chart) {\n        var element = this.chart.getElementsAtEventForMode(event, 'nearest', {\n          intersect: true\n        }, false);\n        var dataset = this.chart.getElementsAtEventForMode(event, 'dataset', {\n          intersect: true\n        }, false);\n        if (element && element[0] && dataset) {\n          this.$emit('select', {\n            originalEvent: event,\n            element: element[0],\n            dataset: dataset\n          });\n        }\n      }\n    },\n    generateLegend: function generateLegend() {\n      if (this.chart) {\n        return this.chart.generateLegend();\n      }\n    }\n  }\n};\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar _hoisted_1 = [\"width\", \"height\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root'),\n    style: _ctx.sx('root')\n  }, _ctx.ptmi('root')), [createElementVNode(\"canvas\", mergeProps({\n    ref: \"canvas\",\n    width: _ctx.width,\n    height: _ctx.height,\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $options.onCanvasClick($event);\n    })\n  }, _objectSpread(_objectSpread({}, _ctx.canvasProps), _ctx.ptm('canvas'))), null, 16, _hoisted_1)], 16);\n}\n\nscript.render = render;\n\nexport { script as default };\n","import { render } from \"./HorizontalBarChart.vue?vue&type=template&id=73a8635c&scoped=true&ts=true\"\nimport script from \"./HorizontalBarChart.vue?vue&type=script&lang=ts\"\nexport * from \"./HorizontalBarChart.vue?vue&type=script&lang=ts\"\n\nimport \"./HorizontalBarChart.vue?vue&type=style&index=0&id=73a8635c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-73a8635c\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Chart = _resolveComponent(\"Chart\")!\n\n  return (_openBlock(), _createBlock(_component_Chart, {\n    type: \"doughnut\",\n    data: _ctx.chartData,\n    options: _ctx.chartOptions\n  }, null, 8, [\"data\", \"options\"]))\n}","<template>\r\n    <Chart type=\"doughnut\" :data=\"chartData\" :options=\"chartOptions\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\nimport Chart from 'primevue/chart';\r\n\r\nexport default defineComponent({\r\n    name: 'DoughnutChart',\r\n    created() {\r\n        this.chartData;\r\n    },\r\n    props: {\r\n        chartData: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n    },\r\n    components: {\r\n        Chart\r\n    },\r\n    data() {\r\n        return {\r\n            chartOptions: {\r\n                indexAxis: 'y',\r\n                responsive: true,\r\n                plugins: {\r\n                    legend: {\r\n                        labels: {\r\n                            color: \"grey\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        }\r\n    },\r\n\r\n});\r\n</script>\r\n","import { render } from \"./DoughnutChart.vue?vue&type=template&id=348f47cf&ts=true\"\nimport script from \"./DoughnutChart.vue?vue&type=script&lang=ts\"\nexport * from \"./DoughnutChart.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Chart = _resolveComponent(\"Chart\")!\n\n  return (_openBlock(), _createBlock(_component_Chart, {\n    type: \"line\",\n    data: _ctx.chartData,\n    options: _ctx.chartOptions,\n    class: \"w-full md:w-30rem\"\n  }, null, 8, [\"data\", \"options\"]))\n}","<template>\r\n  <Chart type=\"line\" :data=\"chartData\" :options=\"chartOptions\" class=\"w-full md:w-30rem\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref } from 'vue';\r\nimport Chart from 'primevue/chart';\r\n\r\nexport default defineComponent({\r\n  name: 'LineChartChart',\r\n  props: {\r\n    chartData: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n  },\r\n  components: {\r\n    Chart\r\n  },\r\n  setup() {\r\n    const chartOptions = ref({\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          labels: {\r\n            color: \"grey\",\r\n          },\r\n        },\r\n      },\r\n      scales: {\r\n        x: {\r\n          ticks: {\r\n            color: \"grey\",\r\n          },\r\n          grid: {\r\n            color: \"rgb(225, 225, 225)\",\r\n          },\r\n        },\r\n        y: {\r\n          position: 'left',\r\n          beginAtZero: true,\r\n          ticks: {\r\n            color: \"grey\",\r\n            callback: function (value: number) {\r\n              const formatter = new Intl.NumberFormat('en-US', {\r\n                style: 'currency',\r\n                currency: 'USD',\r\n              });\r\n\r\n              return value < 0 ? '-' + formatter.format(Math.abs(value)) : formatter.format(value);\r\n            },\r\n          },\r\n          grid: {\r\n            color: \"rgb(225, 225, 225)\",\r\n          },\r\n        }\r\n      },\r\n    });\r\n\r\n    return {\r\n      chartOptions\r\n    };\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.flag-icon {\r\n  width: 1.5em;\r\n  height: auto;\r\n}\r\n</style>","import { render } from \"./LineChart.vue?vue&type=template&id=4ce7f7e8&scoped=true&ts=true\"\nimport script from \"./LineChart.vue?vue&type=script&lang=ts\"\nexport * from \"./LineChart.vue?vue&type=script&lang=ts\"\n\nimport \"./LineChart.vue?vue&type=style&index=0&id=4ce7f7e8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4ce7f7e8\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Chart = _resolveComponent(\"Chart\")!\n\n  return (_openBlock(), _createBlock(_component_Chart, {\n    type: \"bar\",\n    data: _ctx.chartData,\n    options: _ctx.chartOptions,\n    class: \"w-full md:w-30rem\"\n  }, null, 8, [\"data\", \"options\"]))\n}","<template>\r\n    <Chart type=\"bar\" :data=\"chartData\" :options=\"chartOptions\" class=\"w-full md:w-30rem\"/>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, watch, ref } from 'vue';\r\nimport Chart from 'primevue/chart';\r\n\r\nexport default defineComponent({\r\n    name: 'HorizontalBarChart',\r\n    props: {\r\n        chartData: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n\r\n    },\r\n    components: {\r\n        Chart\r\n    },\r\n    setup(props) {\r\n        const chartOptions = ref({\r\n            responsive: true,\r\n            plugins: {\r\n                legend: {\r\n                    display: false\r\n                },\r\n            },\r\n            scales: {\r\n                x: {\r\n                    ticks: {\r\n                       color: \"grey\"\r\n                    },\r\n                    grid: {\r\n                        display: false\r\n                    },\r\n                },\r\n                y: {\r\n                    suggestedMin: 0, \r\n                    suggestedMax: 0,\r\n                    beginAtZero: true,\r\n                    ticks: {\r\n                        color: \"grey\",\r\n                        callback: function (value: number) {\r\n                            if (value % 1 === 0) {\r\n                                return value;\r\n                            }\r\n                        },\r\n                    },\r\n                    grid: {\r\n                        color: \"rgb(225, 225, 225)\",\r\n                    },\r\n                },\r\n            },\r\n        });\r\n\r\n        watch(() => props.chartData.datasets[0].data, () => {\r\n            const maxCnpjCount = Math.max(...props.chartData.datasets[0].data);\r\n            chartOptions.value.scales.y.suggestedMax = maxCnpjCount + 5;\r\n        });\r\n\r\n        return {\r\n            chartOptions\r\n        };\r\n    }\r\n\r\n\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.flag-icon {\r\n    width: 1.5em;\r\n    height: auto;\r\n}\r\n</style>","import { render } from \"./BarChart.vue?vue&type=template&id=818d2b44&scoped=true&ts=true\"\nimport script from \"./BarChart.vue?vue&type=script&lang=ts\"\nexport * from \"./BarChart.vue?vue&type=script&lang=ts\"\n\nimport \"./BarChart.vue?vue&type=style&index=0&id=818d2b44&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-818d2b44\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Chart = _resolveComponent(\"Chart\")!\n\n  return (_openBlock(), _createBlock(_component_Chart, {\n    type: \"pie\",\n    data: _ctx.chartData,\n    options: _ctx.chartOptions\n  }, null, 8, [\"data\", \"options\"]))\n}","<template>\r\n    <Chart type=\"pie\" :data=\"chartData\" :options=\"chartOptions\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\nimport Chart from 'primevue/chart';\r\n\r\nexport default defineComponent({\r\n    name: 'PieChart',\r\n    created() {\r\n        this.chartData;\r\n    },\r\n    props: {\r\n        chartData: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n    },\r\n    components: {\r\n        Chart\r\n    },\r\n    data() {\r\n        return {\r\n            chartOptions: {\r\n                indexAxis: 'y',\r\n                responsive: true,\r\n                plugins: {\r\n                    legend: {\r\n                        labels: {\r\n                            color: \"grey\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        }\r\n    },\r\n\r\n});\r\n</script>\r\n","import { render } from \"./PieChart.vue?vue&type=template&id=b7a1078e&ts=true\"\nimport script from \"./PieChart.vue?vue&type=script&lang=ts\"\nexport * from \"./PieChart.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./HomePage.vue?vue&type=template&id=3501a89d&scoped=true&ts=true\"\nimport script from \"./HomePage.vue?vue&type=script&lang=ts\"\nexport * from \"./HomePage.vue?vue&type=script&lang=ts\"\n\nimport \"./HomePage.vue?vue&type=style&index=0&id=3501a89d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3501a89d\"]])\n\nexport default __exports__"],"names":["root","factory","randomColor","module","exports","this","seed","colorDictionary","loadColorBounds","colorRanges","options","undefined","parseInt","stringToInteger","TypeError","H","S","B","count","totalColors","colors","i","push","length","color","pickHue","pickSaturation","pickBrightness","setFormat","hueRange","getRealHueRange","hue","randomWithin","step","j","min","max","getHueRange","luminosity","saturationRange","getSaturationRange","sMin","sMax","bMin","getMinimumBrightness","bMax","hsv","format","HSVtoHSL","hsl","hslColor","alpha","Math","random","HSVtoRGB","rgb","join","rgbColor","HSVtoHex","lowerBounds","getColorInfo","s1","v1","s2","v2","m","b","colorInput","number","match","HexToHSB","colorName","range","golden_ratio","r","floor","rnd","componentToHex","c","hex","toString","defineColor","name","brightnessRange","h","s","v","h_i","f","p","q","t","g","result","replace","red","substr","green","blue","cMax","delta","saturation","k","round","string","total","Number","MAX_SAFE_INTEGER","charCodeAt","colorHue","isNaN","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","key","_hoisted_5","_createElementVNode","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","style","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","ref","tableStyle","_hoisted_46","_hoisted_47","_hoisted_48","render","_ctx","_cache","$props","$setup","$data","$options","_component_Card","_resolveComponent","_component_LineChart","_component_BarChart","_component_DoughnutChart","_component_HorizontalBarChart","_component_PieChart","_component_Toolbar","_component_CountryFlag","_component_Column","_component_DataTable","_openBlock","_createElementBlock","_toDisplayString","$t","isLoaded","_Fragment","_createVNode","title","_withCtx","_createTextVNode","content","countAllNetIncome","formatCurrency","_","totalCompaniesCounts","totalFinancialsCounts","totalBrancheCounts","netIncomeChartData","labels","_createBlock","chartData","barChartData","expenseChartData","sectorsChartData","formattedDate","pieChartData","revenueChartData","start","value","countryCounts","paginator","rows","empty","default","field","header","body","data","country","getCountryCode","getCountryName","topEarnings","earnings","_normalizeClass","active","_component_Chart","type","chartOptions","inlineStyles","position","classes","ChartStyle","BaseStyle","extend","script$1","BaseComponent","props","String","plugins","width","height","canvasProps","provide","$parentInstance","script","inheritAttrs","emits","chart","watch","handler","reinit","deep","mounted","initChart","beforeUnmount","destroy","methods","_this","then","$refs","canvas","$emit","getCanvas","$canvas","getChart","getBase64Image","toBase64Image","refresh","update","onCanvasClick","event","element","getElementsAtEventForMode","intersect","dataset","originalEvent","generateLegend","_typeof","o","Symbol","iterator","constructor","prototype","ownKeys","e","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","_toPropertyKey","configurable","writable","_toPrimitive","toPrimitive","call","openBlock","createElementBlock","mergeProps","cx","sx","ptmi","createElementVNode","onClick","$event","ptm","defineComponent","created","required","components","Chart","indexAxis","responsive","legend","display","scales","x","ticks","callback","grid","drawBorder","y","beginAtZero","__exports__","setup","formatter","Intl","NumberFormat","currency","abs","suggestedMin","suggestedMax","datasets","maxCnpjCount","HorizontalBarChart","LineChart","DoughnutChart","PieChart","BarChart","locale","useI18n","capitalizeFirstLetter","date","charAt","toUpperCase","slice","Date","month","toLocaleString","capitalizedMonth","onMounted","user","branches","companies","financials","topCountryBranche","userIdentify","userNameIdentify","label","fill","borderColor","tension","backgroundColor","borderWidth","valuationChartData","monthNames","br","en","countries","code","store","useStore","userId","state","userName","router","fetchUsers","fetchBranches","fetchCompanies","fetchFinancials","calculateBrancheAmounts","calculateTopCountryBranches","calculateRevenueCounts","calculateExpenseAmounts","calculateNetIncome","calculateTopEarnings","calculateCompaniesCounts","calculateBrancheCounts","calculateFinancialCounts","calculateSectorCounts","calculateAllNetIncome","calculateNetIncomePerCategories","response","axiosInstance","get","error","console","company","includes","_id","map","valuation","branche","financial","countryCode","find","formatDate","dateString","toLocaleDateString","day","year","totalCompanies","totalBranches","totalFinancials","currentMonth","getMonth","currentYear","getFullYear","earningsMap","reduce","acc","dateParts","split","brancheId","branch_id","companyId","company_id","companyName","currentEarnings","set","amount","Map","Array","from","entries","sort","a","sector","netIncomeMap","companySector","currentNetIncome","values","$i18n","netIncomeAmounts","companyKey","currentAmount","groupedAmounts","monthYear","currentData","companyData","Set","flatMap","reverse","multiplier","numericValue","parseFloat","toFixed","expenseAmounts","revenueAmounts","isOnlyInactive","branchesToConsider","brancheCounts","sectorCounts","countryName","branch","branchCountry","counts"],"sourceRoot":""}