{"version":3,"file":"js/470.4b5d858e.js","mappings":"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","sources":["webpack://web-project/./src/views/AllBranchesPage.vue?6758","webpack://web-project/./src/views/AllBranchesPage.vue","webpack://web-project/./src/components/modals/AllBranchesModal.vue?c58b","webpack://web-project/./src/components/modals/AllBranchesModal.vue","webpack://web-project/./src/components/modals/AllBranchesModal.vue?18d3","webpack://web-project/./src/views/AllBranchesPage.vue?e84f"],"sourcesContent":["import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, Fragment as _Fragment, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-61f678d6\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = { class: \"table\" }\nconst _hoisted_3 = { class: \"title\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"spinner-container\"\n}\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"pi pi-spin pi-spinner large-spinner\" }, null, -1))\nconst _hoisted_6 = [\n  _hoisted_5\n]\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1))\nconst _hoisted_8 = {\n  class: \"dataTable\",\n  ref: \"tableRef\"\n}\nconst _hoisted_9 = { class: \"p-d-flex p-jc-end p-ai-center\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Button = _resolveComponent(\"Button\")!\n  const _component_InputText = _resolveComponent(\"InputText\")!\n  const _component_InputGroupAddon = _resolveComponent(\"InputGroupAddon\")!\n  const _component_InputGroup = _resolveComponent(\"InputGroup\")!\n  const _component_Toolbar = _resolveComponent(\"Toolbar\")!\n  const _component_Column = _resolveComponent(\"Column\")!\n  const _component_CountryFlag = _resolveComponent(\"CountryFlag\")!\n  const _component_DataTable = _resolveComponent(\"DataTable\")!\n  const _component_DeleteModal = _resolveComponent(\"DeleteModal\")!\n  const _component_BranchModal = _resolveComponent(\"BranchModal\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"h1\", _hoisted_3, _toDisplayString(_ctx.$t('branches_page.title')), 1),\n        (!_ctx.isLoaded)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _hoisted_6))\n          : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n              _createVNode(_component_Toolbar, null, {\n                start: _withCtx(() => [\n                  _createVNode(_component_Button, {\n                    icon: \"pi pi-file-excel\",\n                    class: \"mr-2\",\n                    severity: \"secondary\",\n                    onClick: _ctx.exportToExcel\n                  }, null, 8, [\"onClick\"]),\n                  _createVNode(_component_Button, {\n                    icon: \"pi pi-print\",\n                    severity: \"secondary\",\n                    onClick: _ctx.exportToPDF\n                  }, null, 8, [\"onClick\"])\n                ]),\n                center: _withCtx(() => [\n                  _createVNode(_component_InputGroup, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_InputText, {\n                        icon: \"pi pi-search\",\n                        modelValue: _ctx.searchText,\n                        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.searchText) = $event)),\n                        placeholder: _ctx.$t('branches_page.search_bar'),\n                        style: {\"width\":\"30vw\"},\n                        onInput: _ctx.filterBranches,\n                        rounded: \"\"\n                      }, null, 8, [\"modelValue\", \"placeholder\", \"onInput\"]),\n                      _createVNode(_component_InputGroupAddon, null, {\n                        default: _withCtx(() => [\n                          _hoisted_7\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                end: _withCtx(() => [\n                  _createVNode(_component_Button, {\n                    label: _ctx.$t('branches_page.button_add_branche'),\n                    onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.openItem()))\n                  }, null, 8, [\"label\"])\n                ]),\n                _: 1\n              }),\n              _createElementVNode(\"div\", _hoisted_8, [\n                _createVNode(_component_DataTable, {\n                  value: _ctx.filteredBranches,\n                  paginator: true,\n                  rows: 10,\n                  tableStyle: \"width: 100%\"\n                }, {\n                  empty: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t('branches_page.empty_table')), 1)\n                  ]),\n                  default: _withCtx(() => [\n                    _createVNode(_component_Column, {\n                      field: \"name\",\n                      header: _ctx.$t('branches_page.table_column_name'),\n                      sortable: \"\",\n                      style: {\"width\":\"15%\"}\n                    }, null, 8, [\"header\"]),\n                    _createVNode(_component_Column, {\n                      field: \"cnpj\",\n                      header: _ctx.$t('branches_page.table_column_cnpj'),\n                      sortable: \"\",\n                      style: {\"width\":\"15%\"}\n                    }, null, 8, [\"header\"]),\n                    _createVNode(_component_Column, {\n                      field: \"legal_nature\",\n                      header: _ctx.$t('branches_page.table_column_legal_nature'),\n                      sortable: \"\",\n                      style: {\"width\":\"15%\"}\n                    }, null, 8, [\"header\"]),\n                    _createVNode(_component_Column, {\n                      field: \"country\",\n                      header: _ctx.$t('branches_page.table_column_country'),\n                      sortable: \"\",\n                      style: {\"width\":\"15%\"}\n                    }, {\n                      body: _withCtx(({ data }) => [\n                        _createVNode(_component_CountryFlag, {\n                          class: \"mr-1\",\n                          country: _ctx.getCountryCode(data.country)\n                        }, null, 8, [\"country\"]),\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.getCountryName(data.country)), 1)\n                      ]),\n                      _: 1\n                    }, 8, [\"header\"]),\n                    _createVNode(_component_Column, {\n                      field: \"share_capital\",\n                      header: _ctx.$t('branches_page.table_column_share_capital'),\n                      sortable: \"\",\n                      style: {\"width\":\"15%\"}\n                    }, {\n                      body: _withCtx(({ data }) => [\n                        _createElementVNode(\"div\", null, _toDisplayString(_ctx.formatCurrency(data.share_capital)), 1)\n                      ]),\n                      _: 1\n                    }, 8, [\"header\"]),\n                    _createVNode(_component_Column, {\n                      field: \"company_id\",\n                      header: _ctx.$t('branches_page.table_column_company'),\n                      sortable: \"\"\n                    }, {\n                      body: _withCtx(({ data }) => [\n                        _createElementVNode(\"div\", null, _toDisplayString(_ctx.companies[data.company_id]?.name), 1)\n                      ]),\n                      _: 1\n                    }, 8, [\"header\"]),\n                    _createVNode(_component_Column, {\n                      field: \"active\",\n                      header: _ctx.$t('branches_page.table_column_status'),\n                      sortable: \"\"\n                    }, {\n                      body: _withCtx(({ data }) => [\n                        _createElementVNode(\"i\", {\n                          class: _normalizeClass([\"pi\", { 'pi-check-circle text-green-500': data.active === 1, 'pi-times-circle text-red-400': data.active === 0 }])\n                        }, null, 2)\n                      ]),\n                      _: 1\n                    }, 8, [\"header\"]),\n                    _createVNode(_component_Column, {\n                      field: \"actions\",\n                      header: _ctx.$t('branches_page.table_column_action')\n                    }, {\n                      body: _withCtx(({ data }) => [\n                        _createElementVNode(\"div\", _hoisted_9, [\n                          _createVNode(_component_Button, {\n                            icon: \"pi pi-pencil\",\n                            class: \"mb-2 mr-2\",\n                            severity: \"success\",\n                            rounded: \"\",\n                            onClick: ($event: any) => (_ctx.openItem(data))\n                          }, null, 8, [\"onClick\"]),\n                          _createVNode(_component_Button, {\n                            icon: \"pi pi-times\",\n                            class: \"mb-2 mr-2\",\n                            severity: \"danger\",\n                            rounded: \"\",\n                            onClick: ($event: any) => (_ctx.deleteItem(data))\n                          }, null, 8, [\"onClick\"]),\n                          _createVNode(_component_Button, {\n                            icon: \"pi pi-dollar\",\n                            class: \"mb-2\",\n                            severity: \"help\",\n                            rounded: \"\",\n                            onClick: ($event: any) => (_ctx.goToFinancial(data))\n                          }, null, 8, [\"onClick\"])\n                        ])\n                      ]),\n                      _: 1\n                    }, 8, [\"header\"])\n                  ]),\n                  _: 1\n                }, 8, [\"value\"])\n              ], 512)\n            ], 64))\n      ])\n    ]),\n    (_ctx.isDeleteModalVisible)\n      ? (_openBlock(), _createBlock(_component_DeleteModal, {\n          key: 0,\n          visible: _ctx.isDeleteModalVisible,\n          \"onUpdate:visible\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.isDeleteModalVisible) = $event)),\n          id: _ctx.idBranche,\n          items: 'branch',\n          onItemDeleted: _ctx.handlerFilteringBranche\n        }, null, 8, [\"visible\", \"id\", \"onItemDeleted\"]))\n      : _createCommentVNode(\"\", true),\n    (_ctx.isModalVisible)\n      ? (_openBlock(), _createBlock(_component_BranchModal, {\n          key: 1,\n          visible: _ctx.isModalVisible,\n          \"onUpdate:visible\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.isModalVisible) = $event)),\n          id: _ctx.idBranche,\n          onBrancheUpdated: _ctx.handlerFilteringBranche\n        }, null, 8, [\"visible\", \"id\", \"onBrancheUpdated\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","<template>\r\n    <div class=\"container\">\r\n        <div class=\"table\">\r\n            <h1 class=\"title\">{{ $t('branches_page.title') }}</h1>\r\n            <template v-if=\"!isLoaded\">\r\n                <div class=\"spinner-container\">\r\n                    <i class=\"pi pi-spin pi-spinner large-spinner\" />\r\n                </div>\r\n            </template>\r\n            <template v-else>\r\n                <Toolbar>\r\n                    <template #start>\r\n                        <Button icon=\"pi pi-file-excel\" class=\"mr-2\" severity=\"secondary\"\r\n                            @click=\"exportToExcel\"></Button>\r\n                        <Button icon=\"pi pi-print\" severity=\"secondary\" @click=\"exportToPDF\"></Button>\r\n                    </template>\r\n                    <template #center>\r\n                        <InputGroup>\r\n                            <InputText icon=\"pi pi-search\" v-model=\"searchText\"\r\n                                :placeholder=\"$t('branches_page.search_bar')\" style=\"width: 30vw;\"\r\n                                @input=\"filterBranches\" rounded></InputText>\r\n                            <InputGroupAddon>\r\n                                <i class=\"pi pi-search\"></i>\r\n                            </InputGroupAddon>\r\n                        </InputGroup>\r\n                    </template>\r\n                    <template #end>\r\n                        <Button :label=\"$t('branches_page.button_add_branche')\" @click=\"openItem()\"></Button>\r\n                    </template>\r\n                </Toolbar>\r\n                <div class=\"dataTable\" ref=\"tableRef\">\r\n                    <DataTable :value=\"filteredBranches\" :paginator=\"true\" :rows=\"10\" tableStyle=\"width: 100%\">\r\n                        <template #empty>{{ $t('branches_page.empty_table') }}</template>\r\n                        <Column field=\"name\" :header=\"$t('branches_page.table_column_name')\" sortable\r\n                            style=\"width: 15%\">\r\n                        </Column>\r\n                        <Column field=\"cnpj\" :header=\"$t('branches_page.table_column_cnpj')\" sortable\r\n                            style=\"width: 15%\">\r\n                        </Column>\r\n                        <Column field=\"legal_nature\" :header=\"$t('branches_page.table_column_legal_nature')\" sortable\r\n                            style=\"width: 15%\"></Column>\r\n                        <Column field=\"country\" :header=\"$t('branches_page.table_column_country')\" sortable\r\n                            style=\"width: 15%\">\r\n                            <template #body=\"{ data }\">\r\n                                <CountryFlag class=\"mr-1\" :country=\"getCountryCode(data.country)\">\r\n                                </CountryFlag>\r\n                                <span> {{ getCountryName(data.country) }}</span>\r\n                            </template>\r\n                        </Column>\r\n                        <Column field=\"share_capital\" :header=\"$t('branches_page.table_column_share_capital')\" sortable\r\n                            style=\"width: 15%\">\r\n                            <template #body=\"{ data }\">\r\n                                <div>{{ formatCurrency(data.share_capital) }}</div>\r\n                            </template>\r\n                        </Column>\r\n                        <Column field=\"company_id\" :header=\"$t('branches_page.table_column_company')\" sortable>\r\n                            <template #body=\"{ data }\">\r\n                                <div>{{ companies[data.company_id]?.name }}</div>\r\n                            </template>\r\n                        </Column>\r\n                        <Column field=\"active\" :header=\"$t('branches_page.table_column_status')\" sortable>\r\n                            <template #body=\"{ data }\">\r\n                                <i class=\"pi\"\r\n                                    :class=\"{ 'pi-check-circle text-green-500': data.active === 1, 'pi-times-circle text-red-400': data.active === 0 }\" />\r\n                            </template>\r\n                        </Column>\r\n                        <Column field=\"actions\" :header=\"$t('branches_page.table_column_action')\">\r\n                            <template #body=\"{ data }\">\r\n                                <div class=\"p-d-flex p-jc-end p-ai-center\">\r\n                                    <Button icon=\"pi pi-pencil\" class=\"mb-2 mr-2\" severity=\"success\" rounded\r\n                                        @click=\"openItem(data)\" />\r\n                                    <Button icon=\"pi pi-times\" class=\"mb-2 mr-2\" severity=\"danger\" rounded\r\n                                        @click=\"deleteItem(data)\" />\r\n                                    <Button icon=\"pi pi-dollar\" class=\"mb-2\" severity=\"help\" rounded\r\n                                        @click=\"goToFinancial(data)\"></Button>\r\n                                </div>\r\n                            </template>\r\n                        </Column>\r\n                    </DataTable>\r\n                </div>\r\n            </template>\r\n        </div>\r\n    </div>\r\n    <DeleteModal v-if=\"isDeleteModalVisible\" v-model:visible=\"isDeleteModalVisible\" :id=\"idBranche\" :items=\"'branch'\"\r\n        @itemDeleted=\"handlerFilteringBranche\" />\r\n    <BranchModal v-if=\"isModalVisible\" v-model:visible=\"isModalVisible\" :id=\"idBranche\"\r\n        @brancheUpdated=\"handlerFilteringBranche\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\n\r\nimport IBranch from '../interfaces/IBranch';\r\nimport ICompany from '../interfaces/ICompany';\r\nimport IUsers from '../interfaces/IUsers';\r\nimport axiosInstance from '../http';\r\nimport BranchModal from '../components/modals/AllBranchesModal.vue';\r\nimport DeleteModal from '../components/modals/DeleteModal.vue';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport router from '../router';\r\nimport { useStore } from 'vuex';\r\n\r\nexport default defineComponent({\r\n    name: 'BranchePage',\r\n    components: {\r\n        BranchModal,\r\n        DeleteModal\r\n    },\r\n    data() {\r\n        return {\r\n            filteredBranches: [] as IBranch[],\r\n            branches: [] as IBranch[],\r\n            companies: {} as Record<string, ICompany>,\r\n            user: {} as IUsers,\r\n            modalData: {} as { type: string, id: number },\r\n            isModalVisible: false,\r\n            isDeleteModalVisible: false,\r\n            isLoaded: false,\r\n            statusActive: this.$t('branches_page.table_status_value_active'),\r\n            statusInactive: this.$t('branches_page.table_status_value_inactive'),\r\n            userIdentify: '',\r\n            userNameIdentify: '',\r\n            idBranche: '',\r\n            searchText: '',\r\n            countries: [\r\n                { name: this.$t('countries.brazil'), code: 'br' },\r\n                { name: this.$t('countries.united_states'), code: 'us' },\r\n                { name: this.$t('countries.france'), code: 'fr' },\r\n                { name: this.$t('countries.germany'), code: 'de' },\r\n                { name: this.$t('countries.japan'), code: 'jp' },\r\n                { name: this.$t('countries.italy'), code: 'it' },\r\n                { name: this.$t('countries.portugal'), code: 'pt' },\r\n            ]\r\n        }\r\n    },\r\n    created() {\r\n        const store = useStore();\r\n        const userId = store.state.userId;\r\n        const userName = store.state.userName;\r\n        if (!userId && !userName) {\r\n            router.push('/');\r\n        }\r\n        this.userIdentify = userId;\r\n        this.userNameIdentify = userName;\r\n    },\r\n    async mounted() {\r\n        if (this.userIdentify) {\r\n            await this.fetchUsers();\r\n            await this.fetchBranches();\r\n            await this.fetchCompanies();\r\n            this.isLoaded = true;\r\n        }\r\n    },\r\n    methods: {\r\n        async fetchUsers() {\r\n            try {\r\n                const response = await axiosInstance.get(`/user/${this.userIdentify}`);\r\n                this.user = response.data as IUsers;\r\n            } catch (error) {\r\n                console.error('Error fetching user', error);\r\n            }\r\n        },\r\n        async fetchCompanies() {\r\n            try {\r\n                const response = await axiosInstance.get('/company');\r\n                this.companies = response.data.reduce((acc: Record<string, ICompany>, company: ICompany) => {\r\n                    acc[company._id] = company;\r\n                    return acc;\r\n                }, {} as Record<string, ICompany>);\r\n\r\n                return this.companies;\r\n            } catch (error) {\r\n                console.error('Error fetching companies', error);\r\n            }\r\n        },\r\n        async fetchBranches() {\r\n            try {\r\n                const response = await axiosInstance.get('/branch');\r\n                this.branches = response.data as IBranch[];\r\n                this.branches = this.branches.filter(branch => this.user.branches.includes(branch._id));\r\n                this.branches = this.branches.map(branch => ({\r\n                    ...branch,\r\n                    date_establishment: this.formatDate(branch.date_establishment)\r\n                }));\r\n                this.filteredBranches = this.branches;\r\n            } catch (error) {\r\n                console.error('Error fetching branches:', error);\r\n            }\r\n        },\r\n        async handlerFilteringBranche() {\r\n            await this.fetchUsers();\r\n            this.fetchBranches();\r\n        },\r\n        onSave(updatedBranche: IBranch) {\r\n            this.filteredBranches = this.filteredBranches.map(branch =>\r\n                branch._id === updatedBranche._id ? updatedBranche : branch\r\n            );\r\n        },\r\n        getCountryName(countryCode: string): string {\r\n            const country = this.countries.find(c => c.code === countryCode);\r\n            return country ? country.name : '';\r\n        },\r\n        formatDate(dateString: string) {\r\n            return dateString ? new Date(dateString).toLocaleDateString('en-US', { month: '2-digit', day: '2-digit', year: 'numeric' }) : '';\r\n        },\r\n        getStatus(active: number): string {\r\n            return active === 1 ? this.statusActive : this.statusInactive;\r\n        },\r\n        onConfirm(event: { type: string, id: number }) {\r\n            this.isModalVisible = false;\r\n            this.$emit('onConfirm', event);\r\n        },\r\n        deleteItem(branch: IBranch) {\r\n            this.idBranche = branch._id;\r\n            this.isDeleteModalVisible = true;\r\n        },\r\n        goToFinancial(branch: IBranch) {\r\n            router.push(`/financial/${branch._id}`);\r\n        },\r\n        openItem(branch?: IBranch) {\r\n            this.idBranche = branch ? branch._id : '';\r\n            this.isModalVisible = true;\r\n        },\r\n        getCountryCode(countryName: string): string {\r\n            const country = this.countries.find(c => c.code === countryName);\r\n            return country ? country.code : '';\r\n        },\r\n        exportToPDF() {\r\n            const pdf = new jsPDF('p', 'pt', 'a4');\r\n            const columns = [\r\n                { title: \"Name\", dataKey: \"name\" },\r\n                { title: \"CNPJ\", dataKey: \"cnpj\" },\r\n                { title: \"Legal Nature\", dataKey: \"legal_nature\" },\r\n                { title: \"Country\", dataKey: \"country\" },\r\n                { title: \"Share Capital\", dataKey: \"share_capital\" },\r\n                { title: \"Company\", dataKey: \"company_id\" },\r\n                { title: \"Status\", dataKey: \"active\" }\r\n            ];\r\n            const rows = this.filteredBranches.map(branch => ({\r\n                \"name\": branch.name,\r\n                \"cnpj\": branch.cnpj,\r\n                \"legal_nature\": branch.legal_nature,\r\n                \"country\": this.getCountryName(branch.country),\r\n                \"share_capital\": this.formatCurrency(branch.share_capital.toString()),\r\n                \"company_id\": this.companies[branch.company_id]?.name || \"\",\r\n                \"active\": this.getStatus(branch.active)\r\n            }));\r\n\r\n            pdf.autoTable({\r\n                head: [columns.map(col => col.title)],\r\n                body: rows.map(row => columns.map(col => row[col.dataKey as keyof typeof row])),\r\n                startY: 40,\r\n                styles: { overflow: 'linebreak' },\r\n                columnStyles: {\r\n                    0: { cellWidth: 80 }, // Name\r\n                    1: { cellWidth: 80 }, // Branch\r\n                    2: { cellWidth: 80 }, // Legal Nature\r\n                    3: { cellWidth: 100 }, // Country\r\n                    4: { cellWidth: 80 }, // Share Capital\r\n                    5: { cellWidth: 80 }, // Company\r\n                    6: { cellWidth: 70 }  // Status\r\n                },\r\n                margin: { top: 60, left: 15 }\r\n            });\r\n\r\n            pdf.save('Branche.pdf');\r\n        },\r\n        formatCurrency(value?: string): string {\r\n            if (!value || isNaN(parseFloat(value))) {\r\n                return '';\r\n            }\r\n            const numericValue = parseFloat(value);\r\n            return '$' + numericValue.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n        },\r\n        exportToExcel() {\r\n            const data = this.filteredBranches.map((branch: IBranch) => ({\r\n                Name: branch.name,\r\n                Branch: branch.cnpj,\r\n                \"Legal Nature\": branch.legal_nature,\r\n                Country: this.getCountryName(branch.country),\r\n                \"Share Capital\": this.formatCurrency(branch.share_capital.toString()),\r\n                Company: this.companies[branch.company_id]?.name,\r\n                Status: this.getStatus(branch.active)\r\n            }));\r\n            const ws = XLSX.utils.json_to_sheet(data);\r\n            const wb = XLSX.utils.book_new();\r\n            XLSX.utils.book_append_sheet(wb, ws, 'Branch');\r\n            XLSX.writeFile(wb, 'branches.xlsx');\r\n        },\r\n        filterBranches() {\r\n            const searchTextLower = this.searchText.toLowerCase();\r\n            this.filteredBranches = this.branches.filter(branch => {\r\n                const name = branch.name?.toLowerCase() || '';\r\n                const cnpj = branch.cnpj?.toLowerCase() || '';\r\n                const legal_nature = branch.legal_nature?.toLocaleLowerCase() || '';\r\n                const country = this.getCountryName(branch.country)?.toLowerCase() || '';\r\n                const share_capital = (branch.share_capital)?.toString() || '';\r\n                const active = (branch.active === 1 ? this.statusActive : this.statusInactive).toLowerCase();\r\n                const companies = this.companies[branch.company_id]?.name.toLowerCase() || '';\r\n\r\n                return name.includes(searchTextLower) ||\r\n                    cnpj.includes(searchTextLower) ||\r\n                    legal_nature.includes(searchTextLower) ||\r\n                    country.includes(searchTextLower) ||\r\n                    share_capital.includes(searchTextLower) ||\r\n                    active.startsWith(searchTextLower) ||\r\n                    companies.includes(searchTextLower)\r\n            });\r\n        },\r\n    },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.card-description {\r\n    width: 50vw;\r\n}\r\n\r\n.custom-age-td-class {\r\n    width: 70vw;\r\n}\r\n\r\n.table {\r\n    width: 100%;\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 15px;\r\n    width: 99%;\r\n}\r\n</style>../interfaces/IBranch","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5aa7cef3\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"flex-container\" }\nconst _hoisted_2 = { class: \"flex-item\" }\nconst _hoisted_3 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_4 = { for: \"name\" }\nconst _hoisted_5 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_6 = { for: \"country\" }\nconst _hoisted_7 = { class: \"country-option\" }\nconst _hoisted_8 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_9 = { for: \"legalNature\" }\nconst _hoisted_10 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_11 = { for: \"cnpj\" }\nconst _hoisted_12 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_13 = { for: \"company\" }\nconst _hoisted_14 = { class: \"flex-item\" }\nconst _hoisted_15 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_16 = { for: \"share_capital\" }\nconst _hoisted_17 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"pi pi-dollar\" }, null, -1))\nconst _hoisted_18 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_19 = { for: \"establishment\" }\nconst _hoisted_20 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_21 = { for: \"zip\" }\nconst _hoisted_22 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_23 = { for: \"phone\" }\nconst _hoisted_24 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_25 = { for: \"phone\" }\nconst _hoisted_26 = { class: \"flex flex-wrap\" }\nconst _hoisted_27 = {\n  for: \"active\",\n  class: \"mr-4\"\n}\nconst _hoisted_28 = {\n  for: \"inactive\",\n  class: \"ml-2\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_InputText = _resolveComponent(\"InputText\")!\n  const _component_CountryFlag = _resolveComponent(\"CountryFlag\")!\n  const _component_Dropdown = _resolveComponent(\"Dropdown\")!\n  const _component_InputMask = _resolveComponent(\"InputMask\")!\n  const _component_AutoComplete = _resolveComponent(\"AutoComplete\")!\n  const _component_InputNumber = _resolveComponent(\"InputNumber\")!\n  const _component_InputGroupAddon = _resolveComponent(\"InputGroupAddon\")!\n  const _component_InputGroup = _resolveComponent(\"InputGroup\")!\n  const _component_Calendar = _resolveComponent(\"Calendar\")!\n  const _component_RadioButton = _resolveComponent(\"RadioButton\")!\n  const _component_Button = _resolveComponent(\"Button\")!\n  const _component_Toast = _resolveComponent(\"Toast\")!\n  const _component_Dialog = _resolveComponent(\"Dialog\")!\n\n  return (_openBlock(), _createBlock(_component_Dialog, {\n    visible: _ctx.innerVisible,\n    \"onUpdate:visible\": _cache[11] || (_cache[11] = ($event: any) => ((_ctx.innerVisible) = $event)),\n    modal: true,\n    header: _ctx.labelTitle,\n    style: { width: '100%', maxWidth: '50rem' }\n  }, {\n    footer: _withCtx(() => [\n      _createVNode(_component_Button, {\n        label: _ctx.$t('branches_modal.button_cancel'),\n        severity: \"secondary\",\n        onClick: _ctx.onCancel\n      }, null, 8, [\"label\", \"onClick\"]),\n      _createVNode(_component_Button, {\n        icon: \"pi pi-check\",\n        severity: \"success\",\n        label: _ctx.$t('branches_modal.button_save'),\n        onClick: _ctx.onSave\n      }, null, 8, [\"label\", \"onClick\"])\n    ]),\n    default: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"label\", _hoisted_4, _toDisplayString(_ctx.$t('branches_modal.label_name')), 1),\n            _createVNode(_component_InputText, {\n              id: \"name\",\n              modelValue: _ctx.branches.name,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.branches.name) = $event))\n            }, null, 8, [\"modelValue\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_5, [\n            _createElementVNode(\"label\", _hoisted_6, _toDisplayString(_ctx.$t('branches_modal.label_country')), 1),\n            _createVNode(_component_Dropdown, {\n              modelValue: _ctx.selectedCountry,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.selectedCountry) = $event)),\n              options: _ctx.countries,\n              optionLabel: \"name\",\n              optionValue: \"code\",\n              onChange: _ctx.onCountryChange\n            }, {\n              option: _withCtx(({ option }) => [\n                _createElementVNode(\"div\", _hoisted_7, [\n                  _createVNode(_component_CountryFlag, {\n                    class: \"mr-1\",\n                    country: option.code,\n                    size: \"small\"\n                  }, null, 8, [\"country\"]),\n                  _createElementVNode(\"span\", null, _toDisplayString(option.name), 1)\n                ])\n              ]),\n              _: 1\n            }, 8, [\"modelValue\", \"options\", \"onChange\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_8, [\n            _createElementVNode(\"label\", _hoisted_9, _toDisplayString(_ctx.$t('branches_modal.label_legal_nature')), 1),\n            _createVNode(_component_Dropdown, {\n              modelValue: _ctx.selectedLegalNature,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.selectedLegalNature) = $event)),\n              options: _ctx.getLegalNaturesForCountry(_ctx.selectedCountry),\n              optionLabel: \"name\",\n              optionValue: \"name\",\n              onChange: _ctx.onLegalNatureChange\n            }, null, 8, [\"modelValue\", \"options\", \"onChange\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_10, [\n            _createElementVNode(\"label\", _hoisted_11, _toDisplayString(_ctx.$t('branches_modal.label_cnpj')), 1),\n            _createVNode(_component_InputMask, {\n              id: \"cnpj\",\n              modelValue: _ctx.branches.cnpj,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.branches.cnpj) = $event)),\n              mask: _ctx.getMaskForCountryBranche()\n            }, null, 8, [\"modelValue\", \"mask\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_12, [\n            _createElementVNode(\"label\", _hoisted_13, _toDisplayString(_ctx.$t('branches_modal.label_company')), 1),\n            _createVNode(_component_AutoComplete, {\n              id: \"company\",\n              modelValue: _ctx.selectedCompany,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.selectedCompany) = $event)),\n              dropdown: \"\",\n              suggestions: _ctx.companyNames,\n              onComplete: _ctx.searchCompanies,\n              onSelect: _ctx.onSelectCompany\n            }, null, 8, [\"modelValue\", \"suggestions\", \"onComplete\", \"onSelect\"])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_14, [\n          _createElementVNode(\"div\", _hoisted_15, [\n            _createElementVNode(\"label\", _hoisted_16, _toDisplayString(_ctx.$t('branches_modal.label_share_capital')), 1),\n            _createVNode(_component_InputGroup, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_InputNumber, {\n                  id: \"share_capital\",\n                  modelValue: _ctx.branches.share_capital,\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.branches.share_capital) = $event)),\n                  inputId: \"currency-us\",\n                  mode: \"currency\",\n                  currency: \"USD\",\n                  locale: \"en-US\"\n                }, null, 8, [\"modelValue\"]),\n                _createVNode(_component_InputGroupAddon, null, {\n                  default: _withCtx(() => [\n                    _hoisted_17\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _createElementVNode(\"div\", _hoisted_18, [\n            _createElementVNode(\"label\", _hoisted_19, _toDisplayString(_ctx.$t('branches_modal.label_date_establishment')), 1),\n            _createVNode(_component_Calendar, {\n              id: \"establishment\",\n              showIcon: \"\",\n              iconDisplay: \"input\",\n              modelValue: _ctx.dateEstablishment,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.dateEstablishment) = $event)),\n              dateFormat: \"mm/dd/yy\"\n            }, null, 8, [\"modelValue\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_20, [\n            _createElementVNode(\"label\", _hoisted_21, _toDisplayString(_ctx.$t('branches_modal.label_zip_code')), 1),\n            _createVNode(_component_InputMask, {\n              id: \"zip\",\n              modelValue: _ctx.branches.zip,\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.branches.zip) = $event)),\n              mask: _ctx.getMaskForCountryZipCode()\n            }, null, 8, [\"modelValue\", \"mask\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_22, [\n            _createElementVNode(\"label\", _hoisted_23, _toDisplayString(_ctx.$t('branches_modal.label_phone')), 1),\n            _createVNode(_component_InputMask, {\n              id: \"phone\",\n              modelValue: _ctx.branches.phone,\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.branches.phone) = $event)),\n              mask: _ctx.getMaskForCountryPhone()\n            }, null, 8, [\"modelValue\", \"mask\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_24, [\n            _createElementVNode(\"label\", _hoisted_25, _toDisplayString(_ctx.$t('branches_modal.label_status')), 1),\n            _createElementVNode(\"div\", _hoisted_26, [\n              _createVNode(_component_RadioButton, {\n                modelValue: _ctx.branches.active,\n                \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((_ctx.branches.active) = $event)),\n                id: \"1\",\n                class: \"mr-2\",\n                name: \"1\",\n                value: 1\n              }, null, 8, [\"modelValue\"]),\n              _createElementVNode(\"label\", _hoisted_27, _toDisplayString(_ctx.$t('branches_modal.radio_button_active')), 1),\n              _createVNode(_component_RadioButton, {\n                modelValue: _ctx.branches.active,\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((_ctx.branches.active) = $event)),\n                id: \"0\",\n                class: \"mr-2\",\n                name: \"0\",\n                value: 0\n              }, null, 8, [\"modelValue\"]),\n              _createElementVNode(\"label\", _hoisted_28, _toDisplayString(_ctx.$t('branches_modal.radio_button_inactive')), 1)\n            ])\n          ])\n        ])\n      ]),\n      _createVNode(_component_Toast)\n    ]),\n    _: 1\n  }, 8, [\"visible\", \"header\"]))\n}","<template>\r\n    <Dialog v-model:visible=\"innerVisible\" :modal=\"true\" :header=\"labelTitle\"\r\n        :style=\"{ width: '100%', maxWidth: '50rem' }\">\r\n        <div class=\"flex-container\">\r\n            <div class=\"flex-item\">\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"name\">{{ $t('branches_modal.label_name') }}</label>\r\n                    <InputText id=\"name\" v-model=\"branches.name\"></InputText>\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"country\">{{ $t('branches_modal.label_country') }}</label>\r\n                    <Dropdown v-model=\"selectedCountry\" :options=\"countries\" optionLabel=\"name\" optionValue=\"code\"\r\n                        @change=\"onCountryChange\">\r\n                        <template #option=\"{ option }\">\r\n                            <div class=\"country-option\">\r\n                                <CountryFlag class=\"mr-1\" :country=\"option.code\" size=\"small\"></CountryFlag>\r\n                                <span> {{ option.name }}</span>\r\n                            </div>\r\n                        </template>\r\n                    </Dropdown>\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"legalNature\">{{ $t('branches_modal.label_legal_nature') }}</label>\r\n                    <Dropdown v-model=\"selectedLegalNature\" :options=\"getLegalNaturesForCountry(selectedCountry)\"\r\n                        optionLabel=\"name\" optionValue=\"name\" @change=\"onLegalNatureChange\" />\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"cnpj\">{{ $t('branches_modal.label_cnpj') }}</label>\r\n                    <InputMask id=\"cnpj\" v-model=\"branches.cnpj\" :mask=\"getMaskForCountryBranche()\"></InputMask>\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"company\">{{ $t('branches_modal.label_company') }}</label>\r\n                    <AutoComplete id=\"company\" v-model=\"selectedCompany\" dropdown :suggestions=\"companyNames\"\r\n                        @complete=\"searchCompanies\" @select=\"onSelectCompany\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"flex-item\">\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"share_capital\">{{ $t('branches_modal.label_share_capital') }}</label>\r\n                    <InputGroup>\r\n                        <InputNumber id=\"share_capital\" v-model=\"branches.share_capital\" inputId=\"currency-us\"\r\n                            mode=\"currency\" currency=\"USD\" locale=\"en-US\"></InputNumber>\r\n                        <InputGroupAddon>\r\n                            <i class=\"pi pi-dollar\"></i>\r\n                        </InputGroupAddon>\r\n                    </InputGroup>\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"establishment\">{{ $t('branches_modal.label_date_establishment') }}</label>\r\n                    <Calendar id=\"establishment\" showIcon iconDisplay=\"input\" v-model=\"dateEstablishment\"\r\n                        dateFormat=\"mm/dd/yy\">\r\n                    </Calendar>\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"zip\">{{ $t('branches_modal.label_zip_code') }}</label>\r\n                    <InputMask id=\"zip\" v-model=\"branches.zip\" :mask=\"getMaskForCountryZipCode()\"></InputMask>\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"phone\">{{ $t('branches_modal.label_phone') }}</label>\r\n                    <InputMask id=\"phone\" v-model=\"branches.phone\" :mask=\"getMaskForCountryPhone()\">\r\n                    </InputMask>\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"phone\">{{ $t('branches_modal.label_status') }}</label>\r\n                    <div class=\"flex flex-wrap\">\r\n                        <RadioButton v-model=\"branches.active\" id=\"1\" class=\"mr-2\" name=\"1\" :value=\"1\">\r\n                        </RadioButton>\r\n                        <label for=\"active\" class=\"mr-4\">{{ $t('branches_modal.radio_button_active') }}</label>\r\n                        <RadioButton v-model=\"branches.active\" id=\"0\" class=\"mr-2\" name=\"0\" :value=\"0\">\r\n                        </RadioButton>\r\n                        <label for=\"inactive\" class=\"ml-2\">{{ $t('branches_modal.radio_button_inactive') }}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <template v-slot:footer>\r\n            <Button :label=\"$t('branches_modal.button_cancel')\" severity=\"secondary\" @click=\"onCancel\"></Button>\r\n            <Button icon=\"pi pi-check\" severity=\"success\" :label=\"$t('branches_modal.button_save')\"\r\n                @click=\"onSave\"></Button>\r\n        </template>\r\n        <Toast />\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\n\r\nimport axiosInstance from '@/http/index';\r\nimport IBranch from '@/interfaces/IBranch';\r\nimport ICompany from '@/interfaces/ICompany';\r\nimport IUsers from '@/interfaces/IUsers';\r\nimport router from '@/router';\r\nimport { useToast } from 'primevue/usetoast';\r\nimport { useStore } from 'vuex';\r\nimport { useI18n } from 'vue-i18n';\r\n\r\nexport default defineComponent({\r\n    name: \"BrancheModal\",\r\n    props: {\r\n        id: String,\r\n        visible: Boolean\r\n    },\r\n    setup() {\r\n        const toasts = useToast();\r\n\r\n        const { t } = useI18n();\r\n\r\n        function showFailedToast() {\r\n            toasts.add({ severity: 'error', summary: t('toast_error.summary'), detail: t('toast_error.detail_branch_exists'), life: 3000 });\r\n\r\n        }\r\n        return { showFailedToast };\r\n    },\r\n    data() {\r\n        return {\r\n            branches: {} as IBranch,\r\n            user: {} as IUsers,\r\n            branchesArray: [] as IBranch[],\r\n            companies: [] as ICompany[],\r\n            companyNames: [] as string[],\r\n            dateEstablishment: new Date(),\r\n            isDuplicate: false,\r\n            labelTitle: this.$t('branches_modal.title_add'),\r\n            userIdentify: 0,\r\n            userNameIdentify: '',\r\n            selectedPhoneMask: '',\r\n            selectedCompany: '',\r\n            selectedCountry: '',\r\n            selectedLegalNature: '',\r\n            legalNatures: {\r\n                'br': ['Empresário Individual', 'Ltda', 'S.A', 'EIRELI', 'MEI', 'Cooperativa'],\r\n                'us': ['LLC', 'Corp', 'Sole Proprietorship', 'Partnership', 'Cooperative', 'Nonprofit Organization'],\r\n                'fr': ['SARL', 'SA', 'Entreprise Individuelle', 'SNC', 'SCS', 'Association'],\r\n                'de': ['GmbH', 'AG', 'Einzelunternehmen', 'OHG', 'KG', 'eG'],\r\n                'jp': ['Kabushiki Kaisha', 'Godo Kaisha', 'Shokushu Gyo', 'Gomei Kaisha', 'Goshi Kaisha'],\r\n                'it': ['SRL', 'SpA', 'Impresa Individuale', 'SNC', 'SAS', 'COOP'],\r\n                'pt': ['Lda', 'SA', 'Empresário em Nome Individual', 'Sociedade em Comandita', 'Cooperativa']\r\n            } as Record<string, string[]>,\r\n            countries: [\r\n                { name: this.$t('countries.brazil'), code: 'br' },\r\n                { name: this.$t('countries.united_states'), code: 'us' },\r\n                { name: this.$t('countries.france'), code: 'fr' },\r\n                { name: this.$t('countries.germany'), code: 'de' },\r\n                { name: this.$t('countries.japan'), code: 'jp' },\r\n                { name: this.$t('countries.italy'), code: 'it' },\r\n                { name: this.$t('countries.portugal'), code: 'pt' },\r\n            ]\r\n        }\r\n    },\r\n    created() {\r\n        const store = useStore();\r\n        const userId = store.state.userId;\r\n        const userName = store.state.userName;\r\n        if (!userId && !userName) {\r\n            router.push('/');\r\n        }\r\n        this.userIdentify = userId;\r\n        this.userNameIdentify = userName;\r\n    },\r\n    async mounted() {\r\n        await this.fetchUsers();\r\n        await this.fetchCompanies();\r\n        if (this.id !== '') {\r\n            await this.fetchBranch();\r\n            this.labelTitle = this.$t('branches_modal.title_edit');\r\n        }\r\n    },\r\n    computed: {\r\n        innerVisible: {\r\n            get(): boolean {\r\n                return this.visible;\r\n            },\r\n            set(value: boolean) {\r\n                if (!value) {\r\n                    this.$emit('update:visible', value)\r\n                }\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        async fetchUsers() {\r\n            try {\r\n                const response = await axiosInstance.get(`/user/${this.userIdentify}`);\r\n                this.user = response.data as IUsers;\r\n            } catch (error) {\r\n                console.error('Error fetching user', error);\r\n            }\r\n        },\r\n        async fetchCompanies() {\r\n            try {\r\n                const response = await axiosInstance.get('/company');\r\n                this.companies = response.data as ICompany[];\r\n                this.companies = this.companies.filter(company => this.user.companies.includes(company._id));\r\n            } catch (error) {\r\n                console.error('Error fetching companies', error);\r\n            }\r\n        },\r\n        async fetchBranch() {\r\n            try {\r\n                const response = await axiosInstance.get(`/branch/${this.id}`);\r\n                this.branches = response.data as IBranch;\r\n                this.dateEstablishment = new Date(this.branches.date_establishment);\r\n                const companyName = this.companies.find(company => company._id === this.branches.company_id)?.name || '';\r\n                this.selectedCompany = companyName;\r\n                this.selectedLegalNature = this.branches.legal_nature;\r\n                this.selectedCountry = this.branches.country;\r\n\r\n                this.branches.date_establishment = this.formatDate(this.branches.date_establishment);\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching branche', error);\r\n            }\r\n        },\r\n        async postBranch() {\r\n            this.onSelectCompany();\r\n            try {\r\n                this.isDuplicate = await this.checkDuplicateBranche(this.branches.name);\r\n\r\n                if (this.isDuplicate) {\r\n                    this.showFailedToast();\r\n                    return;\r\n                }\r\n\r\n                this.branches.date_establishment = this.dateEstablishment.toISOString()\r\n                const response = await axiosInstance.post('/branch/', this.branches);\r\n                const branchId = response.data.branch._id;\r\n                this.user.branches.push(branchId);\r\n\r\n                await axiosInstance.put(`/user/${this.userIdentify}`, this.user);\r\n            } catch (error) {\r\n                console.error('Error posting branche', error);\r\n            }\r\n        },\r\n        async putBranch() {\r\n            this.onSelectCompany();\r\n            try {\r\n                this.isDuplicate = await this.checkDuplicateBranche(this.branches.name);\r\n\r\n                if (this.isDuplicate) {\r\n                    this.showFailedToast();\r\n                    return;\r\n                }\r\n\r\n                this.branches.date_establishment = (this.dateEstablishment.toISOString()).toString();\r\n                await axiosInstance.put(`/branch/${this.id}`, this.branches);\r\n            } catch (error) {\r\n                console.error('Error posting branche', error);\r\n            }\r\n        },\r\n        async onSave() {\r\n            if (this.id !== '') {\r\n                await this.putBranch();\r\n            } else {\r\n                await this.postBranch();\r\n            }\r\n            if (!this.isDuplicate) {\r\n                this.innerVisible = false;\r\n                this.$emit('brancheUpdated');\r\n            }\r\n        },\r\n        async checkDuplicateBranche(brancheName: string): Promise<boolean> {\r\n            try {\r\n                const response = await axiosInstance.get('/branch');\r\n                const filteredBranches = response.data.filter((branche: IBranch) => {\r\n                    return this.user.branches.some((userBrancheId: string) => userBrancheId === branche._id &&\r\n                        brancheName.toLowerCase() === branche.name.toLowerCase() &&\r\n                        branche._id !== this.id);\r\n                });\r\n                return filteredBranches.length > 0;\r\n            } catch (error) {\r\n                console.error('Error checking duplicate branch', error);\r\n                return false;\r\n            }\r\n        },\r\n        getLegalNaturesForCountry(country: string): { name: string; value: string }[] {\r\n            return (this.legalNatures[country] || []).map(name => ({ name, value: name }));\r\n        },\r\n        onLegalNatureChange() {\r\n            this.branches.legal_nature = this.selectedLegalNature;\r\n        },\r\n        onCountryChange() {\r\n            this.branches.country = this.selectedCountry;\r\n        },\r\n        formatDate(dateString: string) {\r\n            return dateString ? new Date(dateString).toLocaleDateString('en-US', { month: '2-digit', day: '2-digit', year: 'numeric' }) : '';\r\n        },\r\n        getMaskForCountryBranche(): string {\r\n            const masks: Record<string, string> = {\r\n                'br': '99.999.999/9999-99',\r\n                'us': '99-9999999',\r\n                'fr': '99999999999',\r\n                'de': '999999999999',\r\n                'it': '99.999.999.999',\r\n                'jp': '999-99-99999',\r\n                'pt': '999999999',\r\n            };\r\n            return masks[this.selectedCountry] || '';\r\n        },\r\n        getMaskForCountryZipCode(): string {\r\n            const masks: Record<string, string> = {\r\n                'br': '99999-999',\r\n                'us': '99999-9999',\r\n                'fr': '99999',\r\n                'de': '99999',\r\n                'it': '99999',\r\n                'jp': '999-9999',\r\n                'pt': '9999-999',\r\n            };\r\n            return masks[this.selectedCountry] || '';\r\n        },\r\n        getMaskForCountryPhone(): string {\r\n            const masks: Record<string, string> = {\r\n                'br': '+55 (99) 99999-9999',\r\n                'us': '+1 (999) 999-9999',\r\n                'fr': '+33 99 99 99 99 99',\r\n                'de': '+49 99999 999999',\r\n                'it': '+39 999 999 9999',\r\n                'jp': '+81 999-9999-9999',\r\n                'pt': '+351 999 999 999',\r\n            };\r\n            return masks[this.selectedCountry] || '';\r\n        },\r\n        onSelectCompany() {\r\n            const selectedCompanyId = this.companies.find(company => company.name === this.selectedCompany)?._id || '';\r\n            this.branches.company_id = selectedCompanyId;\r\n        },\r\n        searchCompanies(event: any) {\r\n            const query = event.query.toLowerCase();\r\n            this.companyNames = this.companies\r\n                .filter(company => company.name.toLowerCase().includes(query))\r\n                .map(company => company.name);\r\n        },\r\n        onCancel() {\r\n            this.innerVisible = false;\r\n        },\r\n    }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.flex-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\n.flex-item {\r\n    flex: 0 0 48%;\r\n\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .flex-container {\r\n        flex-direction: column;\r\n    }\r\n\r\n    .flex-item {\r\n        flex: 0 0 100%;\r\n    }\r\n\r\n    .flex-item {\r\n        flex: 0 0 45%;\r\n    }\r\n}\r\n</style>","import { render } from \"./AllBranchesModal.vue?vue&type=template&id=5aa7cef3&scoped=true&ts=true\"\nimport script from \"./AllBranchesModal.vue?vue&type=script&lang=ts\"\nexport * from \"./AllBranchesModal.vue?vue&type=script&lang=ts\"\n\nimport \"./AllBranchesModal.vue?vue&type=style&index=0&id=5aa7cef3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5aa7cef3\"]])\n\nexport default __exports__","import { render } from \"./AllBranchesPage.vue?vue&type=template&id=61f678d6&scoped=true&ts=true\"\nimport script from \"./AllBranchesPage.vue?vue&type=script&lang=ts\"\nexport * from \"./AllBranchesPage.vue?vue&type=script&lang=ts\"\n\nimport \"./AllBranchesPage.vue?vue&type=style&index=0&id=61f678d6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-61f678d6\"]])\n\nexport default __exports__"],"names":["_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","key","_hoisted_5","_createElementVNode","_hoisted_6","_hoisted_7","_hoisted_8","ref","_hoisted_9","render","_ctx","_cache","$props","$setup","$data","$options","_component_Button","_resolveComponent","_component_InputText","_component_InputGroupAddon","_component_InputGroup","_component_Toolbar","_component_Column","_component_CountryFlag","_component_DataTable","_component_DeleteModal","_component_BranchModal","_openBlock","_createElementBlock","_Fragment","_toDisplayString","$t","isLoaded","_createVNode","start","_withCtx","icon","severity","onClick","exportToExcel","exportToPDF","center","default","modelValue","searchText","$event","placeholder","style","onInput","filterBranches","rounded","_","end","label","openItem","value","filteredBranches","paginator","rows","tableStyle","empty","_createTextVNode","field","header","sortable","body","data","country","getCountryCode","getCountryName","formatCurrency","share_capital","companies","company_id","name","_normalizeClass","active","deleteItem","goToFinancial","isDeleteModalVisible","_createBlock","visible","id","idBranche","items","onItemDeleted","handlerFilteringBranche","_createCommentVNode","isModalVisible","onBrancheUpdated","for","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_component_Dropdown","_component_InputMask","_component_AutoComplete","_component_InputNumber","_component_Calendar","_component_RadioButton","_component_Toast","_component_Dialog","innerVisible","modal","labelTitle","width","maxWidth","footer","onCancel","onSave","branches","selectedCountry","options","countries","optionLabel","optionValue","onChange","onCountryChange","option","code","size","selectedLegalNature","getLegalNaturesForCountry","onLegalNatureChange","cnpj","mask","getMaskForCountryBranche","selectedCompany","dropdown","suggestions","companyNames","onComplete","searchCompanies","onSelect","onSelectCompany","inputId","mode","currency","locale","showIcon","iconDisplay","dateEstablishment","dateFormat","zip","getMaskForCountryZipCode","phone","getMaskForCountryPhone","defineComponent","props","String","Boolean","setup","toasts","useToast","t","useI18n","showFailedToast","add","summary","detail","life","user","branchesArray","Date","isDuplicate","this","userIdentify","userNameIdentify","selectedPhoneMask","legalNatures","created","store","useStore","userId","state","userName","router","push","mounted","fetchUsers","fetchCompanies","fetchBranch","computed","get","set","$emit","methods","response","axiosInstance","error","console","filter","company","includes","_id","date_establishment","companyName","find","legal_nature","formatDate","postBranch","checkDuplicateBranche","toISOString","post","branchId","branch","put","putBranch","toString","brancheName","branche","some","userBrancheId","toLowerCase","length","map","dateString","toLocaleDateString","month","day","year","masks","selectedCompanyId","event","query","__exports__","components","BranchModal","DeleteModal","modalData","statusActive","statusInactive","fetchBranches","reduce","acc","updatedBranche","countryCode","c","getStatus","onConfirm","countryName","pdf","jsPDF","columns","title","dataKey","autoTable","head","col","row","startY","styles","overflow","columnStyles","cellWidth","margin","top","left","save","isNaN","parseFloat","numericValue","toFixed","replace","Name","Branch","Country","Company","Status","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","searchTextLower","toLocaleLowerCase","startsWith"],"sourceRoot":""}