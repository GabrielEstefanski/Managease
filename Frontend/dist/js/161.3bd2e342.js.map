{"version":3,"file":"js/161.3bd2e342.js","mappings":"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","sources":["webpack://web-project/./src/views/BranchPage.vue?9cad","webpack://web-project/./src/views/BranchPage.vue","webpack://web-project/./src/components/modals/BranchModal.vue?422d","webpack://web-project/./src/components/modals/BranchModal.vue","webpack://web-project/./src/components/modals/BranchModal.vue?6b88","webpack://web-project/./src/views/BranchPage.vue?5be4"],"sourcesContent":["import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-028e3a3a\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = { class: \"table\" }\nconst _hoisted_3 = { class: \"title\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"spinner-container\" }, [\n  /*#__PURE__*/_createElementVNode(\"i\", { class: \"pi pi-spin pi-spinner large-spinner\" })\n], -1))\nconst _hoisted_5 = { class: \"title\" }\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"pi pi-search\" }, null, -1))\nconst _hoisted_7 = {\n  class: \"dataTable\",\n  ref: \"tableRef\"\n}\nconst _hoisted_8 = { class: \"p-d-flex p-jc-end p-ai-center\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_Button = _resolveComponent(\"Button\")!\n  const _component_InputText = _resolveComponent(\"InputText\")!\n  const _component_InputGroupAddon = _resolveComponent(\"InputGroupAddon\")!\n  const _component_InputGroup = _resolveComponent(\"InputGroup\")!\n  const _component_Toolbar = _resolveComponent(\"Toolbar\")!\n  const _component_Column = _resolveComponent(\"Column\")!\n  const _component_CountryFlag = _resolveComponent(\"CountryFlag\")!\n  const _component_DataTable = _resolveComponent(\"DataTable\")!\n  const _component_DeleteModal = _resolveComponent(\"DeleteModal\")!\n  const _component_BranchModal = _resolveComponent(\"BranchModal\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        (!_ctx.isLoaded)\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              _createElementVNode(\"h1\", _hoisted_3, _toDisplayString(_ctx.$t('branches_page.title')), 1),\n              _hoisted_4\n            ], 64))\n          : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n              _createElementVNode(\"h1\", _hoisted_5, _toDisplayString(_ctx.company.name), 1),\n              _createVNode(_component_Toolbar, null, {\n                start: _withCtx(() => [\n                  _createVNode(_component_Button, {\n                    icon: \"pi pi-file-excel\",\n                    class: \"mr-2\",\n                    severity: \"secondary\",\n                    onClick: _ctx.exportToExcel\n                  }, null, 8, [\"onClick\"]),\n                  _createVNode(_component_Button, {\n                    icon: \"pi pi-print\",\n                    severity: \"secondary\",\n                    onClick: _ctx.exportToPDF\n                  }, null, 8, [\"onClick\"])\n                ]),\n                center: _withCtx(() => [\n                  _createVNode(_component_InputGroup, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_InputText, {\n                        icon: \"pi pi-search\",\n                        modelValue: _ctx.searchText,\n                        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.searchText) = $event)),\n                        placeholder: _ctx.$t('branches_page.search_bar'),\n                        style: {\"width\":\"30vw\"},\n                        onInput: _ctx.filterBranches,\n                        rounded: \"\"\n                      }, null, 8, [\"modelValue\", \"placeholder\", \"onInput\"]),\n                      _createVNode(_component_InputGroupAddon, null, {\n                        default: _withCtx(() => [\n                          _hoisted_6\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                end: _withCtx(() => [\n                  _createVNode(_component_Button, {\n                    label: _ctx.$t('branches_page.button_add_branche'),\n                    onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.openItem()))\n                  }, null, 8, [\"label\"])\n                ]),\n                _: 1\n              }),\n              _createElementVNode(\"div\", _hoisted_7, [\n                _createVNode(_component_DataTable, {\n                  value: _ctx.filteredBranches,\n                  paginator: true,\n                  rows: 10,\n                  tableStyle: \"width: 100%\",\n                  loading: !_ctx.isLoaded\n                }, {\n                  empty: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.$t('branches_page.empty_table')), 1)\n                  ]),\n                  loading: _withCtx(() => [\n                    _createTextVNode(_toDisplayString(_ctx.company.name) + \" está carregando, por favor espere\", 1)\n                  ]),\n                  default: _withCtx(() => [\n                    _createVNode(_component_Column, {\n                      field: \"name\",\n                      header: _ctx.$t('branches_page.table_column_name'),\n                      sortable: \"\",\n                      style: {\"width\":\"15%\"}\n                    }, null, 8, [\"header\"]),\n                    _createVNode(_component_Column, {\n                      field: \"cnpj\",\n                      header: _ctx.$t('branches_page.table_column_cnpj'),\n                      sortable: \"\",\n                      style: {\"width\":\"15%\"}\n                    }, null, 8, [\"header\"]),\n                    _createVNode(_component_Column, {\n                      field: \"legal_nature\",\n                      header: _ctx.$t('branches_page.table_column_legal_nature'),\n                      sortable: \"\",\n                      style: {\"width\":\"15%\"}\n                    }, null, 8, [\"header\"]),\n                    _createVNode(_component_Column, {\n                      field: \"country\",\n                      header: _ctx.$t('branches_page.table_column_country'),\n                      sortable: \"\",\n                      style: {\"width\":\"15%\"}\n                    }, {\n                      body: _withCtx(({ data }) => [\n                        _createVNode(_component_CountryFlag, {\n                          class: \"mr-1\",\n                          country: _ctx.getCountryCode(data.country)\n                        }, null, 8, [\"country\"]),\n                        _createElementVNode(\"span\", null, _toDisplayString(_ctx.getCountryName(data.country)), 1)\n                      ]),\n                      _: 1\n                    }, 8, [\"header\"]),\n                    _createVNode(_component_Column, {\n                      field: \"share_capital\",\n                      header: _ctx.$t('branches_page.table_column_share_capital'),\n                      sortable: \"\",\n                      style: {\"width\":\"10%\"}\n                    }, {\n                      body: _withCtx(({ data }) => [\n                        _createElementVNode(\"div\", null, _toDisplayString(_ctx.formatCurrency(data.share_capital)), 1)\n                      ]),\n                      _: 1\n                    }, 8, [\"header\"]),\n                    _createVNode(_component_Column, {\n                      field: \"active\",\n                      header: _ctx.$t('branches_page.table_column_status'),\n                      sortable: \"\",\n                      style: {\"width\":\"10%\"}\n                    }, {\n                      body: _withCtx(({ data }) => [\n                        _createElementVNode(\"i\", {\n                          class: _normalizeClass([\"pi\", { 'pi-check-circle text-green-500': data.active === 1, 'pi-times-circle text-red-400': data.active === 0 }])\n                        }, null, 2)\n                      ]),\n                      _: 1\n                    }, 8, [\"header\"]),\n                    _createVNode(_component_Column, {\n                      field: \"actions\",\n                      header: _ctx.$t('branches_page.table_column_action'),\n                      style: {\"width\":\"10%\"}\n                    }, {\n                      body: _withCtx(({ data }) => [\n                        _createElementVNode(\"div\", _hoisted_8, [\n                          _createVNode(_component_Button, {\n                            icon: \"pi pi-pencil\",\n                            class: \"mb-2 mr-2\",\n                            severity: \"success\",\n                            rounded: \"\",\n                            onClick: ($event: any) => (_ctx.openItem(data))\n                          }, null, 8, [\"onClick\"]),\n                          _createVNode(_component_Button, {\n                            icon: \"pi pi-times\",\n                            class: \"mb-2 mr-2\",\n                            severity: \"danger\",\n                            rounded: \"\",\n                            onClick: ($event: any) => (_ctx.deleteItem(data))\n                          }, null, 8, [\"onClick\"]),\n                          _createVNode(_component_Button, {\n                            icon: \"pi pi-dollar\",\n                            class: \"mb-2\",\n                            severity: \"help\",\n                            rounded: \"\",\n                            onClick: ($event: any) => (_ctx.goToFinancial(data))\n                          }, null, 8, [\"onClick\"])\n                        ])\n                      ]),\n                      _: 1\n                    }, 8, [\"header\"])\n                  ]),\n                  _: 1\n                }, 8, [\"value\", \"loading\"])\n              ], 512)\n            ], 64))\n      ])\n    ]),\n    (_ctx.isDeleteModalVisible)\n      ? (_openBlock(), _createBlock(_component_DeleteModal, {\n          key: 0,\n          visible: _ctx.isDeleteModalVisible,\n          \"onUpdate:visible\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.isDeleteModalVisible) = $event)),\n          id: _ctx.idBranch,\n          items: 'branch',\n          onItemDeleted: _ctx.handlerFilteringBranch\n        }, null, 8, [\"visible\", \"id\", \"onItemDeleted\"]))\n      : _createCommentVNode(\"\", true),\n    (_ctx.isModalVisible)\n      ? (_openBlock(), _createBlock(_component_BranchModal, {\n          key: 1,\n          visible: _ctx.isModalVisible,\n          \"onUpdate:visible\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.isModalVisible) = $event)),\n          id: _ctx.idBranch,\n          idCompany: _ctx.idCompany,\n          onBrancheUpdated: _ctx.handlerFilteringBranch\n        }, null, 8, [\"visible\", \"id\", \"idCompany\", \"onBrancheUpdated\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}","<template>\r\n    <div class=\"container\">\r\n        <div class=\"table\">\r\n            <template v-if=\"!isLoaded\">\r\n                <h1 class=\"title\">{{ $t('branches_page.title') }}</h1>\r\n                <div class=\"spinner-container\">\r\n                    <i class=\"pi pi-spin pi-spinner large-spinner\" />\r\n                </div>\r\n            </template>\r\n            <template v-else>\r\n                <h1 class=\"title\">{{ company.name }}</h1>\r\n                <Toolbar>\r\n                    <template #start>\r\n                        <Button icon=\"pi pi-file-excel\" class=\"mr-2\" severity=\"secondary\"\r\n                            @click=\"exportToExcel\"></Button>\r\n                        <Button icon=\"pi pi-print\" severity=\"secondary\" @click=\"exportToPDF\"></Button>\r\n                    </template>\r\n                    <template #center>\r\n                        <InputGroup>\r\n                            <InputText icon=\"pi pi-search\" v-model=\"searchText\"\r\n                                :placeholder=\"$t('branches_page.search_bar')\" style=\"width: 30vw;\"\r\n                                @input=\"filterBranches\" rounded></InputText>\r\n                            <InputGroupAddon>\r\n                                <i class=\"pi pi-search\"></i>\r\n                            </InputGroupAddon>\r\n                        </InputGroup>\r\n                    </template>\r\n                    <template #end>\r\n                        <Button :label=\"$t('branches_page.button_add_branche')\" @click=\"openItem()\"></Button>\r\n                    </template>\r\n                </Toolbar>\r\n                <div class=\"dataTable\" ref=\"tableRef\">\r\n                    <DataTable :value=\"filteredBranches\" :paginator=\"true\" :rows=\"10\" tableStyle=\"width: 100%\"\r\n                        :loading=\"!isLoaded\">\r\n                        <template #empty>{{ $t('branches_page.empty_table') }} </template>\r\n                        <template #loading>{{ company.name }} está carregando, por favor espere</template>\r\n                        <Column field=\"name\" :header=\"$t('branches_page.table_column_name')\" sortable\r\n                            style=\"width: 15%\">\r\n                        </Column>\r\n                        <Column field=\"cnpj\" :header=\"$t('branches_page.table_column_cnpj')\" sortable\r\n                            style=\"width: 15%\">\r\n                        </Column>\r\n                        <Column field=\"legal_nature\" :header=\"$t('branches_page.table_column_legal_nature')\" sortable\r\n                            style=\"width: 15%\"></Column>\r\n                        <Column field=\"country\" :header=\"$t('branches_page.table_column_country')\" sortable\r\n                            style=\"width: 15%\">\r\n                            <template #body=\"{ data }\">\r\n                                <CountryFlag class=\"mr-1\" :country=\"getCountryCode(data.country)\">\r\n                                </CountryFlag>\r\n                                <span> {{ getCountryName(data.country) }}</span>\r\n                            </template>\r\n                        </Column>\r\n                        <Column field=\"share_capital\" :header=\"$t('branches_page.table_column_share_capital')\" sortable\r\n                            style=\"width: 10%\">\r\n                            <template #body=\"{ data }\">\r\n                                <div>{{ formatCurrency(data.share_capital) }}</div>\r\n                            </template>\r\n                        </Column>\r\n                        <Column field=\"active\" :header=\"$t('branches_page.table_column_status')\" sortable\r\n                            style=\"width: 10%\">\r\n                            <template #body=\"{ data }\">\r\n                                <i class=\"pi\"\r\n                                    :class=\"{ 'pi-check-circle text-green-500': data.active === 1, 'pi-times-circle text-red-400': data.active === 0 }\" />\r\n                            </template>\r\n                        </Column>\r\n                        <Column field=\"actions\" :header=\"$t('branches_page.table_column_action')\" style=\"width: 10%\">\r\n                            <template #body=\"{ data }\">\r\n                                <div class=\"p-d-flex p-jc-end p-ai-center\">\r\n                                    <Button icon=\"pi pi-pencil\" class=\"mb-2 mr-2\" severity=\"success\" rounded\r\n                                        @click=\"openItem(data)\" />\r\n                                    <Button icon=\"pi pi-times\" class=\"mb-2 mr-2\" severity=\"danger\" rounded\r\n                                        @click=\"deleteItem(data)\" />\r\n                                    <Button icon=\"pi pi-dollar\" class=\"mb-2\" severity=\"help\" rounded\r\n                                        @click=\"goToFinancial(data)\"></Button>\r\n                                </div>\r\n                            </template>\r\n                        </Column>\r\n                    </DataTable>\r\n                </div>\r\n            </template>\r\n        </div>\r\n    </div>\r\n    <DeleteModal v-if=\"isDeleteModalVisible\" v-model:visible=\"isDeleteModalVisible\" :id=\"idBranch\" :items=\"'branch'\"\r\n        @itemDeleted=\"handlerFilteringBranch\" />\r\n    <BranchModal v-if=\"isModalVisible\" v-model:visible=\"isModalVisible\" :id=\"idBranch\" :idCompany=\"idCompany\"\r\n        @brancheUpdated=\"handlerFilteringBranch\" />\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\n\r\nimport IBranch from '../interfaces/IBranch';\r\nimport ICompany from '../interfaces/ICompany';\r\nimport IUsers from '../interfaces/IUsers';\r\nimport axiosInstance from '../http';\r\nimport BranchModal from '../components/modals/BranchModal.vue';\r\nimport DeleteModal from '../components/modals/DeleteModal.vue';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport * as XLSX from 'xlsx';\r\nimport router from '../router';\r\nimport { useStore } from 'vuex';\r\n\r\nexport default defineComponent({\r\n    name: 'BranchePage',\r\n    props: {\r\n        idCompany: {\r\n            type: String,\r\n            required: true\r\n        }\r\n    },\r\n    components: {\r\n        BranchModal,\r\n        DeleteModal,\r\n    },\r\n    data() {\r\n        return {\r\n            filteredBranches: [] as IBranch[],\r\n            branches: [] as IBranch[],\r\n            company: {} as ICompany,\r\n            user: {} as IUsers,\r\n            modalData: {} as { type: string, id: number },\r\n            isModalVisible: false,\r\n            isDeleteModalVisible: false,\r\n            isLoaded: false,\r\n            statusActive: this.$t('branches_page.table_status_value_active'),\r\n            statusInactive: this.$t('branches_page.table_status_value_inactive'),\r\n            userIdentify: '',\r\n            userNameIdentify: '',\r\n            idBranch: '',\r\n            searchText: '',\r\n            countries: [\r\n                { name: this.$t('countries.brazil'), code: 'br' },\r\n                { name: this.$t('countries.united_states'), code: 'us' },\r\n                { name: this.$t('countries.france'), code: 'fr' },\r\n                { name: this.$t('countries.germany'), code: 'de' },\r\n                { name: this.$t('countries.japan'), code: 'jp' },\r\n                { name: this.$t('countries.italy'), code: 'it' },\r\n                { name: this.$t('countries.portugal'), code: 'pt' },\r\n            ]\r\n        }\r\n    },\r\n    created() {\r\n        const store = useStore();\r\n        const userId = store.state.userId;\r\n        const userName = store.state.userName;\r\n        if (!userId && !userName) {\r\n            router.push('/');\r\n        }\r\n        this.userIdentify = userId;\r\n        this.userNameIdentify = userName;\r\n    },\r\n    async mounted() {\r\n        if (this.userIdentify) {\r\n            await this.fetchUsers();\r\n            await this.fetchCompanies();\r\n            await this.fetchBranches();\r\n            this.isLoaded = true;\r\n        }\r\n    },\r\n    methods: {\r\n        async fetchUsers() {\r\n            try {\r\n                const response = await axiosInstance.get(`/user/${this.userIdentify}`);\r\n                this.user = response.data as IUsers;\r\n            } catch (error) {\r\n                console.error('Error fetching user', error);\r\n            }\r\n        },\r\n        async fetchCompanies() {\r\n            try {\r\n                const response = await axiosInstance.get(`/company/${this.idCompany}`);\r\n                this.company = response.data as ICompany;\r\n                return this.company;\r\n            } catch (error) {\r\n                console.error('Error fetching companies', error);\r\n            }\r\n        },\r\n        async fetchBranches() {\r\n            try {\r\n                const response = await axiosInstance.get('/branch');\r\n                this.branches = response.data as IBranch[];\r\n                this.branches = this.branches.filter(branch => this.company._id === branch.company_id);\r\n                this.branches = this.branches.filter(branch => this.user.branches.includes(branch._id));\r\n                this.branches = this.branches.map(branch => ({\r\n                    ...branch,\r\n                    date_establishment: this.formatDate(branch.date_establishment)\r\n                }));\r\n                this.filteredBranches = this.branches;\r\n            } catch (error) {\r\n                console.error('Error fetching branches:', error);\r\n            }\r\n        },\r\n        async handlerFilteringBranch() {\r\n            await this.fetchUsers();\r\n            this.fetchBranches();\r\n        },\r\n        onSave(updatedBranch: IBranch) {\r\n            this.filteredBranches = this.filteredBranches.map(branch =>\r\n                branch._id === updatedBranch._id ? updatedBranch : branch\r\n            );\r\n        },\r\n        getCountryName(countryCode: string): string {\r\n            const country = this.countries.find(c => c.code === countryCode);\r\n            return country ? country.name : '';\r\n        },\r\n        getStatus(active: number): string {\r\n            return active === 1 ? this.statusActive : this.statusInactive;\r\n        },\r\n        formatDate(dateString: string) {\r\n            return dateString ? new Date(dateString).toLocaleDateString('en-US', { month: '2-digit', day: '2-digit', year: 'numeric' }) : '';\r\n        },\r\n        onConfirm(event: { type: string, id: number }) {\r\n            this.isModalVisible = false;\r\n            this.$emit('onConfirm', event);\r\n        },\r\n        deleteItem(branch: IBranch) {\r\n            this.idBranch = branch._id;\r\n            this.isDeleteModalVisible = true;\r\n        },\r\n        goToFinancial(branch: IBranch) {\r\n            router.push(`/financial/${branch._id}`);\r\n        },\r\n        openItem(branch?: IBranch) {\r\n            this.idBranch = branch ? branch._id : '';\r\n            this.isModalVisible = true;\r\n        },\r\n        getCountryCode(countryName: string): string {\r\n            const country = this.countries.find(c => c.code === countryName);\r\n            return country ? country.code : '';\r\n        },\r\n        exportToPDF() {\r\n            const pdf = new jsPDF('p', 'pt', 'a4');\r\n            const columns = [\r\n                { title: \"Name\", dataKey: \"name\" },\r\n                { title: \"CNPJ\", dataKey: \"cnpj\" },\r\n                { title: \"Legal Nature\", dataKey: \"legal_nature\" },\r\n                { title: \"Country\", dataKey: \"country\" },\r\n                { title: \"Share Capital\", dataKey: \"share_capital\" },\r\n                { title: \"Company\", dataKey: \"company_id\" },\r\n                { title: \"Status\", dataKey: \"active\" }\r\n            ];\r\n            const rows = this.filteredBranches.map(branch => ({\r\n                \"name\": branch.name,\r\n                \"cnpj\": branch.cnpj,\r\n                \"legal_nature\": branch.legal_nature,\r\n                \"country\": this.getCountryName(branch.country),\r\n                \"share_capital\": this.formatCurrency(branch.share_capital.toString()),\r\n                \"company_id\": this.company.name,\r\n                \"active\": this.getStatus(branch.active)\r\n            }));\r\n\r\n            pdf.autoTable({\r\n                head: [columns.map(col => col.title)],\r\n                body: rows.map(row => columns.map(col => row[col.dataKey as keyof typeof row])),\r\n                startY: 40,\r\n                styles: { overflow: 'linebreak' },\r\n                columnStyles: {\r\n                    0: { cellWidth: 80 }, // Name\r\n                    1: { cellWidth: 80 }, // Branche\r\n                    2: { cellWidth: 80 }, // Legal Nature\r\n                    3: { cellWidth: 100 }, // Country\r\n                    4: { cellWidth: 80 }, // Share Capital\r\n                    5: { cellWidth: 80 }, // Company\r\n                    6: { cellWidth: 70 }  // Status\r\n                },\r\n                margin: { top: 60, left: 15 }\r\n            });\r\n\r\n            pdf.save('branch.pdf');\r\n        },\r\n        formatCurrency(value?: string): string {\r\n            if (!value || isNaN(parseFloat(value))) {\r\n                return '';\r\n            }\r\n            const numericValue = parseFloat(value);\r\n            return '$' + numericValue.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n        },\r\n        exportToExcel() {\r\n            const data = this.filteredBranches.map((branch: IBranch) => ({\r\n                Name: branch.name,\r\n                Branch: branch.cnpj,\r\n                \"Legal Nature\": branch.legal_nature,\r\n                Country: this.getCountryName(branch.country),\r\n                \"Share Capital\": this.formatCurrency(branch.share_capital.toString()),\r\n                Company: this.company.name,\r\n                Status: this.getStatus(branch.active)\r\n            }));\r\n            const ws = XLSX.utils.json_to_sheet(data);\r\n            const wb = XLSX.utils.book_new();\r\n            XLSX.utils.book_append_sheet(wb, ws, 'Branche');\r\n            XLSX.writeFile(wb, 'branches.xlsx');\r\n        },\r\n        filterBranches() {\r\n            const searchTextLower = this.searchText.toLowerCase();\r\n            this.filteredBranches = this.branches.filter(branch => {\r\n                const name = branch.name?.toLowerCase() || '';\r\n                const cnpj = branch.cnpj?.toLowerCase() || '';\r\n                const legal_nature = branch.legal_nature?.toLocaleLowerCase() || '';\r\n                const country = this.getCountryName(branch.country)?.toLowerCase() || '';\r\n                const share_capital = (branch.share_capital)?.toString() || '';\r\n                const active = (branch.active === 1 ? this.statusActive : this.statusInactive).toLowerCase();\r\n\r\n                return name.includes(searchTextLower) ||\r\n                    cnpj.includes(searchTextLower) ||\r\n                    legal_nature.includes(searchTextLower) ||\r\n                    country.includes(searchTextLower) ||\r\n                    share_capital.includes(searchTextLower) ||\r\n                    active.startsWith(searchTextLower)\r\n            });\r\n        },\r\n    },\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.card-description {\r\n    width: 50vw;\r\n}\r\n\r\n.custom-age-td-class {\r\n    width: 70vw;\r\n}\r\n\r\n.table {\r\n    width: 100%;\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 15px;\r\n    width: 99%;\r\n}\r\n</style>","import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-368656e7\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"flex-container\" }\nconst _hoisted_2 = { class: \"flex-item\" }\nconst _hoisted_3 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_4 = { for: \"company\" }\nconst _hoisted_5 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_6 = { for: \"name\" }\nconst _hoisted_7 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_8 = { for: \"country\" }\nconst _hoisted_9 = { class: \"country-option\" }\nconst _hoisted_10 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_11 = { for: \"legalNature\" }\nconst _hoisted_12 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_13 = { for: \"cnpj\" }\nconst _hoisted_14 = { class: \"flex-item\" }\nconst _hoisted_15 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_16 = { for: \"share_capital\" }\nconst _hoisted_17 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", { class: \"pi pi-dollar\" }, null, -1))\nconst _hoisted_18 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_19 = { for: \"establishment\" }\nconst _hoisted_20 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_21 = { for: \"zip\" }\nconst _hoisted_22 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_23 = { for: \"phone\" }\nconst _hoisted_24 = { class: \"column gap-2 mb-3\" }\nconst _hoisted_25 = { for: \"phone\" }\nconst _hoisted_26 = { class: \"flex flex-wrap\" }\nconst _hoisted_27 = {\n  for: \"active\",\n  class: \"mr-4\"\n}\nconst _hoisted_28 = {\n  for: \"inactive\",\n  class: \"ml-2\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_InputText = _resolveComponent(\"InputText\")!\n  const _component_CountryFlag = _resolveComponent(\"CountryFlag\")!\n  const _component_Dropdown = _resolveComponent(\"Dropdown\")!\n  const _component_InputMask = _resolveComponent(\"InputMask\")!\n  const _component_InputNumber = _resolveComponent(\"InputNumber\")!\n  const _component_InputGroupAddon = _resolveComponent(\"InputGroupAddon\")!\n  const _component_InputGroup = _resolveComponent(\"InputGroup\")!\n  const _component_Calendar = _resolveComponent(\"Calendar\")!\n  const _component_RadioButton = _resolveComponent(\"RadioButton\")!\n  const _component_Button = _resolveComponent(\"Button\")!\n  const _component_Toast = _resolveComponent(\"Toast\")!\n  const _component_Dialog = _resolveComponent(\"Dialog\")!\n\n  return (_openBlock(), _createBlock(_component_Dialog, {\n    visible: _ctx.innerVisible,\n    \"onUpdate:visible\": _cache[11] || (_cache[11] = ($event: any) => ((_ctx.innerVisible) = $event)),\n    modal: true,\n    header: _ctx.labelTitle,\n    style: { width: '100%', maxWidth: '50rem' }\n  }, {\n    footer: _withCtx(() => [\n      _createVNode(_component_Button, {\n        label: _ctx.$t('branches_modal.button_cancel'),\n        severity: \"secondary\",\n        onClick: _ctx.onCancel\n      }, null, 8, [\"label\", \"onClick\"]),\n      _createVNode(_component_Button, {\n        icon: \"pi pi-check\",\n        severity: \"success\",\n        label: _ctx.$t('branches_modal.button_save'),\n        onClick: _ctx.onSave\n      }, null, 8, [\"label\", \"onClick\"])\n    ]),\n    default: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createElementVNode(\"label\", _hoisted_4, _toDisplayString(_ctx.$t('branches_modal.label_company')), 1),\n            _createVNode(_component_InputText, {\n              id: \"company\",\n              modelValue: _ctx.selectedCompany,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.selectedCompany) = $event)),\n              disabled: \"\"\n            }, null, 8, [\"modelValue\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_5, [\n            _createElementVNode(\"label\", _hoisted_6, _toDisplayString(_ctx.$t('branches_modal.label_name')), 1),\n            _createVNode(_component_InputText, {\n              id: \"name\",\n              modelValue: _ctx.branches.name,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.branches.name) = $event))\n            }, null, 8, [\"modelValue\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_7, [\n            _createElementVNode(\"label\", _hoisted_8, _toDisplayString(_ctx.$t('branches_modal.label_country')), 1),\n            _createVNode(_component_Dropdown, {\n              modelValue: _ctx.selectedCountry,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.selectedCountry) = $event)),\n              options: _ctx.countries,\n              optionLabel: \"name\",\n              optionValue: \"code\",\n              onChange: _ctx.onCountryChange\n            }, {\n              option: _withCtx(({ option }) => [\n                _createElementVNode(\"div\", _hoisted_9, [\n                  _createVNode(_component_CountryFlag, {\n                    class: \"mr-1\",\n                    country: option.code,\n                    size: \"small\"\n                  }, null, 8, [\"country\"]),\n                  _createElementVNode(\"span\", null, _toDisplayString(option.name), 1)\n                ])\n              ]),\n              _: 1\n            }, 8, [\"modelValue\", \"options\", \"onChange\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_10, [\n            _createElementVNode(\"label\", _hoisted_11, _toDisplayString(_ctx.$t('branches_modal.label_legal_nature')), 1),\n            _createVNode(_component_Dropdown, {\n              modelValue: _ctx.selectedLegalNature,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.selectedLegalNature) = $event)),\n              options: _ctx.getLegalNaturesForCountry(_ctx.selectedCountry),\n              optionLabel: \"name\",\n              optionValue: \"name\",\n              onChange: _ctx.onLegalNatureChange\n            }, null, 8, [\"modelValue\", \"options\", \"onChange\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_12, [\n            _createElementVNode(\"label\", _hoisted_13, _toDisplayString(_ctx.$t('branches_modal.label_cnpj')), 1),\n            _createVNode(_component_InputMask, {\n              id: \"cnpj\",\n              modelValue: _ctx.branches.cnpj,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.branches.cnpj) = $event)),\n              mask: _ctx.getMaskForCountryBranche()\n            }, null, 8, [\"modelValue\", \"mask\"])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_14, [\n          _createElementVNode(\"div\", _hoisted_15, [\n            _createElementVNode(\"label\", _hoisted_16, _toDisplayString(_ctx.$t('branches_modal.label_share_capital')), 1),\n            _createVNode(_component_InputGroup, null, {\n              default: _withCtx(() => [\n                _createVNode(_component_InputNumber, {\n                  id: \"share_capital\",\n                  modelValue: _ctx.branches.share_capital,\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.branches.share_capital) = $event)),\n                  inputId: \"currency-us\",\n                  mode: \"currency\",\n                  currency: \"USD\",\n                  locale: \"en-US\"\n                }, null, 8, [\"modelValue\"]),\n                _createVNode(_component_InputGroupAddon, null, {\n                  default: _withCtx(() => [\n                    _hoisted_17\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            })\n          ]),\n          _createElementVNode(\"div\", _hoisted_18, [\n            _createElementVNode(\"label\", _hoisted_19, _toDisplayString(_ctx.$t('branches_modal.label_date_establishment')), 1),\n            _createVNode(_component_Calendar, {\n              id: \"establishment\",\n              showIcon: \"\",\n              iconDisplay: \"input\",\n              modelValue: _ctx.dateEstablishment,\n              \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.dateEstablishment) = $event)),\n              dateFormat: \"mm/dd/yy\"\n            }, null, 8, [\"modelValue\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_20, [\n            _createElementVNode(\"label\", _hoisted_21, _toDisplayString(_ctx.$t('branches_modal.label_zip_code')), 1),\n            _createVNode(_component_InputMask, {\n              id: \"zip\",\n              modelValue: _ctx.branches.zip,\n              \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.branches.zip) = $event)),\n              mask: _ctx.getMaskForCountryZipCode()\n            }, null, 8, [\"modelValue\", \"mask\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_22, [\n            _createElementVNode(\"label\", _hoisted_23, _toDisplayString(_ctx.$t('branches_modal.label_phone')), 1),\n            _createVNode(_component_InputMask, {\n              id: \"phone\",\n              modelValue: _ctx.branches.phone,\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.branches.phone) = $event)),\n              mask: _ctx.getMaskForCountryPhone()\n            }, null, 8, [\"modelValue\", \"mask\"])\n          ]),\n          _createElementVNode(\"div\", _hoisted_24, [\n            _createElementVNode(\"label\", _hoisted_25, _toDisplayString(_ctx.$t('branches_modal.label_status')), 1),\n            _createElementVNode(\"div\", _hoisted_26, [\n              _createVNode(_component_RadioButton, {\n                modelValue: _ctx.branches.active,\n                \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((_ctx.branches.active) = $event)),\n                id: \"1\",\n                class: \"mr-2\",\n                name: \"Active\",\n                value: 1\n              }, null, 8, [\"modelValue\"]),\n              _createElementVNode(\"label\", _hoisted_27, _toDisplayString(_ctx.$t('branches_modal.radio_button_active')), 1),\n              _createVNode(_component_RadioButton, {\n                modelValue: _ctx.branches.active,\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((_ctx.branches.active) = $event)),\n                id: \"0\",\n                class: \"mr-2\",\n                name: \"Inactive\",\n                value: 0\n              }, null, 8, [\"modelValue\"]),\n              _createElementVNode(\"label\", _hoisted_28, _toDisplayString(_ctx.$t('branches_modal.radio_button_inactive')), 1)\n            ])\n          ])\n        ])\n      ]),\n      _createVNode(_component_Toast)\n    ]),\n    _: 1\n  }, 8, [\"visible\", \"header\"]))\n}","<template>\r\n    <Dialog v-model:visible=\"innerVisible\" :modal=\"true\" :header=\"labelTitle\"\r\n        :style=\"{ width: '100%', maxWidth: '50rem' }\">\r\n        <div class=\"flex-container\">\r\n            <div class=\"flex-item\">\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"company\">{{ $t('branches_modal.label_company') }}</label>\r\n                    <InputText id=\"company\" v-model=\"selectedCompany\" disabled />\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"name\">{{ $t('branches_modal.label_name') }}</label>\r\n                    <InputText id=\"name\" v-model=\"branches.name\"></InputText>\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"country\">{{ $t('branches_modal.label_country') }}</label>\r\n                    <Dropdown v-model=\"selectedCountry\" :options=\"countries\" optionLabel=\"name\" optionValue=\"code\"\r\n                        @change=\"onCountryChange\">\r\n                        <template #option=\"{ option }\">\r\n                            <div class=\"country-option\">\r\n                                <CountryFlag class=\"mr-1\" :country=\"option.code\" size=\"small\"></CountryFlag>\r\n                                <span> {{ option.name }}</span>\r\n                            </div>\r\n                        </template>\r\n                    </Dropdown>\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"legalNature\">{{ $t('branches_modal.label_legal_nature') }}</label>\r\n                    <Dropdown v-model=\"selectedLegalNature\" :options=\"getLegalNaturesForCountry(selectedCountry)\"\r\n                        optionLabel=\"name\" optionValue=\"name\" @change=\"onLegalNatureChange\" />\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"cnpj\">{{ $t('branches_modal.label_cnpj') }}</label>\r\n                    <InputMask id=\"cnpj\" v-model=\"branches.cnpj\" :mask=\"getMaskForCountryBranche()\"></InputMask>\r\n                </div>\r\n            </div>\r\n            <div class=\"flex-item\">\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"share_capital\">{{ $t('branches_modal.label_share_capital') }}</label>\r\n                    <InputGroup>\r\n                        <InputNumber id=\"share_capital\" v-model=\"branches.share_capital\" inputId=\"currency-us\"\r\n                            mode=\"currency\" currency=\"USD\" locale=\"en-US\"></InputNumber>\r\n                        <InputGroupAddon>\r\n                            <i class=\"pi pi-dollar\"></i>\r\n                        </InputGroupAddon>\r\n                    </InputGroup>\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"establishment\">{{ $t('branches_modal.label_date_establishment') }}</label>\r\n                    <Calendar id=\"establishment\" showIcon iconDisplay=\"input\" v-model=\"dateEstablishment\"\r\n                        dateFormat=\"mm/dd/yy\">\r\n                    </Calendar>\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"zip\">{{ $t('branches_modal.label_zip_code') }}</label>\r\n                    <InputMask id=\"zip\" v-model=\"branches.zip\" :mask=\"getMaskForCountryZipCode()\"></InputMask>\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"phone\">{{ $t('branches_modal.label_phone') }}</label>\r\n                    <InputMask id=\"phone\" v-model=\"branches.phone\" :mask=\"getMaskForCountryPhone()\">\r\n                    </InputMask>\r\n                </div>\r\n                <div class=\"column gap-2 mb-3\">\r\n                    <label for=\"phone\">{{ $t('branches_modal.label_status') }}</label>\r\n                    <div class=\"flex flex-wrap\">\r\n                        <RadioButton v-model=\"branches.active\" id=1 class=\"mr-2\" name=\"Active\" :value=\"1\">\r\n                        </RadioButton>\r\n                        <label for=\"active\" class=\"mr-4\">{{ $t('branches_modal.radio_button_active') }}</label>\r\n                        <RadioButton v-model=\"branches.active\" id=0 class=\"mr-2\" name=\"Inactive\" :value=\"0\">\r\n                        </RadioButton>\r\n                        <label for=\"inactive\" class=\"ml-2\">{{ $t('branches_modal.radio_button_inactive') }}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <template v-slot:footer>\r\n            <Button :label=\"$t('branches_modal.button_cancel')\" severity=\"secondary\" @click=\"onCancel\"></Button>\r\n            <Button icon=\"pi pi-check\" severity=\"success\" :label=\"$t('branches_modal.button_save')\"\r\n                @click=\"onSave\"></Button>\r\n        </template>\r\n        <Toast />\r\n    </Dialog>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue';\r\n\r\nimport axiosInstance from '@/http/index';\r\nimport IBranch from '@/interfaces/IBranch';\r\nimport ICompany from '@/interfaces/ICompany';\r\nimport router from '@/router';\r\nimport { useToast } from 'primevue/usetoast';\r\nimport { useStore } from 'vuex';\r\nimport { useI18n } from 'vue-i18n';\r\nimport IUsers from '@/interfaces/IUsers';\r\n\r\nexport default defineComponent({\r\n    name: \"BrancheModal\",\r\n    props: {\r\n        id: String,\r\n        idCompany: {\r\n            required: true,\r\n            type: String\r\n        },\r\n        visible: Boolean\r\n    },\r\n\r\n    setup() {\r\n        const toasts = useToast();\r\n\r\n        const { t } = useI18n();\r\n\r\n        function showFailedToast() {\r\n            toasts.add({ severity: 'error', summary: t('toast_error.summary'), detail: t('toast_error.detail_branch_exists'), life: 3000 });\r\n\r\n        }\r\n        return { showFailedToast };\r\n    },\r\n    data() {\r\n        return {\r\n            branches: {} as IBranch,\r\n            user: {} as IUsers,\r\n            branchesArray: [] as IBranch[],\r\n            company: {} as ICompany,\r\n            companies: [] as ICompany[],\r\n            companyNames: [] as string[],\r\n            dateEstablishment: new Date(),\r\n            isDuplicate: false,\r\n            labelTitle: this.$t('branches_modal.title_add'),\r\n            userIdentify: 0,\r\n            userNameIdentify: '',\r\n            selectedPhoneMask: '',\r\n            selectedCompany: '',\r\n            selectedCountry: '',\r\n            selectedLegalNature: '',\r\n            masks: {\r\n                'br': '+55 (99) 99999-9999',\r\n                'us': '+1 (999) 999-9999',\r\n                'fr': '+33 99 99 99 99 99',\r\n                'de': '+49 99999 999999',\r\n                'it': '+39 999 999 9999',\r\n                'jp': '+81 999-9999-9999',\r\n                'pt': '+351 999 999 999',\r\n            } as Record<string, string>,\r\n            legalNatures: {\r\n                'br': ['Empresário Individual', 'Ltda', 'S.A', 'EIRELI', 'MEI', 'Cooperativa'],\r\n                'us': ['LLC', 'Corp', 'Sole Proprietorship', 'Partnership', 'Cooperative', 'Nonprofit Organization'],\r\n                'fr': ['SARL', 'SA', 'Entreprise Individuelle', 'SNC', 'SCS', 'Association'],\r\n                'de': ['GmbH', 'AG', 'Einzelunternehmen', 'OHG', 'KG', 'eG'],\r\n                'jp': ['Kabushiki Kaisha', 'Godo Kaisha', 'Shokushu Gyo', 'Gomei Kaisha', 'Goshi Kaisha'],\r\n                'it': ['SRL', 'SpA', 'Impresa Individuale', 'SNC', 'SAS', 'COOP'],\r\n                'pt': ['Lda', 'SA', 'Empresário em Nome Individual', 'Sociedade em Comandita', 'Cooperativa']\r\n            } as Record<string, string[]>,\r\n            countries: [\r\n                { name: this.$t('countries.brazil'), code: 'br' },\r\n                { name: this.$t('countries.united_states'), code: 'us' },\r\n                { name: this.$t('countries.france'), code: 'fr' },\r\n                { name: this.$t('countries.germany'), code: 'de' },\r\n                { name: this.$t('countries.japan'), code: 'jp' },\r\n                { name: this.$t('countries.italy'), code: 'it' },\r\n                { name: this.$t('countries.portugal'), code: 'pt' },\r\n            ]\r\n        }\r\n    },\r\n    created() {\r\n        const store = useStore();\r\n        const userId = store.state.userId;\r\n        const userName = store.state.userName;\r\n        if (!userId && !userName) {\r\n            router.push('/');\r\n        }\r\n        this.userIdentify = userId;\r\n        this.userNameIdentify = userName;\r\n    },\r\n    async mounted() {\r\n        await this.fetchUsers();\r\n        await this.fetchCompany();\r\n        await this.fetchAllCompanies();\r\n        if (this.id !== '') {\r\n            await this.fetchBranch();\r\n            this.labelTitle = this.$t('branches_modal.title_edit');\r\n        }\r\n    },\r\n    computed: {\r\n        innerVisible: {\r\n            get(): boolean {\r\n                return this.visible;\r\n            },\r\n            set(value: boolean) {\r\n                if (!value) {\r\n                    this.$emit('update:visible', value)\r\n                }\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        async fetchUsers() {\r\n            try {\r\n                const response = await axiosInstance.get(`/user/${this.userIdentify}`);\r\n                this.user = response.data as IUsers;\r\n            } catch (error) {\r\n                console.error('Error fetching user', error);\r\n            }\r\n        },\r\n        async fetchAllCompanies() {\r\n            try {\r\n                const response = await axiosInstance.get('/company');\r\n                this.companies = response.data as ICompany[];\r\n\r\n                this.companies = this.companies.filter(company => this.user.companies.includes(company._id));\r\n            } catch (error) {\r\n                console.error('Error fetching companies', error);\r\n            }\r\n        },\r\n        async fetchCompany() {\r\n            try {\r\n                const response = await axiosInstance.get(`/company/${this.idCompany}`);\r\n                this.company = response.data as ICompany;\r\n                this.selectedCompany = this.company.name;\r\n            } catch (error) {\r\n                console.error('Error fetching company', error);\r\n            }\r\n        },\r\n        async fetchBranch() {\r\n            try {\r\n                const response = await axiosInstance.get(`/branch/${this.id}`);\r\n                this.branches = response.data as IBranch;\r\n                this.dateEstablishment = new Date(this.branches.date_establishment);\r\n                this.selectedLegalNature = this.branches.legal_nature;\r\n                this.selectedCountry = this.branches.country;\r\n\r\n                this.branches.date_establishment = this.formatDate(this.branches.date_establishment);\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching branche', error);\r\n            }\r\n        },\r\n        async postBranch() {\r\n            this.onSelectCompany();\r\n            try {\r\n                this.isDuplicate = await this.checkDuplicateBranche(this.branches.name);\r\n\r\n                if (this.isDuplicate) {\r\n                    this.showFailedToast();\r\n                    return;\r\n                }\r\n\r\n                this.branches.date_establishment = this.dateEstablishment.toISOString()\r\n                const response = await axiosInstance.post('/branch/', this.branches);\r\n                const brancheId = response.data.branch._id;\r\n\r\n                this.user.branches.push(brancheId);\r\n\r\n                await axiosInstance.put(`/user/${this.userIdentify}`, this.user);\r\n            } catch (error) {\r\n                console.error('Error posting branche', error);\r\n            }\r\n        },\r\n        async putBranch() {\r\n            this.onSelectCompany();\r\n            try {\r\n                this.isDuplicate = await this.checkDuplicateBranche(this.branches.name);\r\n\r\n                if (this.isDuplicate) {\r\n                    this.showFailedToast();\r\n                    return;\r\n                }\r\n                this.branches.date_establishment = this.dateEstablishment.toISOString()\r\n                await axiosInstance.put(`/branch/${this.id}`, this.branches);\r\n            } catch (error) {\r\n                console.error('Error posting branche', error);\r\n            }\r\n        },\r\n        async onSave() {\r\n            if (this.id !== '') {\r\n                await this.putBranch();\r\n            } else {\r\n                await this.postBranch();\r\n            }\r\n            if (!this.isDuplicate) {\r\n                this.innerVisible = false;\r\n                this.$emit('brancheUpdated');\r\n            }\r\n        },\r\n        async checkDuplicateBranche(brancheName: string): Promise<boolean> {\r\n            try {\r\n                const response = await axiosInstance.get('/branch');\r\n                const filteredBranches = response.data.filter((branche: IBranch) => {\r\n                    return this.user.branches.some((userBrancheId: string) => userBrancheId === branche._id &&\r\n                        brancheName.toLowerCase() === branche.name.toLowerCase() &&\r\n                        branche._id !== this.id);\r\n                });\r\n                return filteredBranches.length > 0;\r\n            } catch (error) {\r\n                console.error('Error checking duplicate branche', error);\r\n                return false;\r\n            }\r\n        },\r\n        onCountryChange() {\r\n            this.branches.country = this.selectedCountry;\r\n        },\r\n        formatDate(dateString: string) {\r\n            return dateString ? new Date(dateString).toLocaleDateString('en-US', { month: '2-digit', day: '2-digit', year: 'numeric' }) : '';\r\n        },\r\n        onLegalNatureChange() {\r\n            this.branches.legal_nature = this.selectedLegalNature;\r\n        },\r\n        getLegalNaturesForCountry(country: string): { name: string; value: string }[] {\r\n            return (this.legalNatures[country] || []).map(name => ({ name, value: name }));\r\n        },\r\n        getMaskForCountryBranche(): string {\r\n            const masks: Record<string, string> = {\r\n                'br': '99.999.999/9999-99',\r\n                'us': '99-9999999',\r\n                'fr': '99999999999',\r\n                'de': '999999999999',\r\n                'it': '99.999.999.999',\r\n                'jp': '999-99-99999',\r\n                'pt': '999999999',\r\n            };\r\n            return masks[this.selectedCountry] || '';\r\n        },\r\n        getMaskForCountryZipCode(): string {\r\n            const masks: Record<string, string> = {\r\n                'br': '99999-999',\r\n                'us': '99999-9999',\r\n                'fr': '99999',\r\n                'de': '99999',\r\n                'it': '99999',\r\n                'jp': '999-9999',\r\n                'pt': '9999-999',\r\n            };\r\n            return masks[this.selectedCountry] || '';\r\n        },\r\n        getMaskForCountryPhone(): string {\r\n            const masks: Record<string, string> = {\r\n                'br': '+55 (99) 99999-9999',\r\n                'us': '+1 (999) 999-9999',\r\n                'fr': '+33 99 99 99 99 99',\r\n                'de': '+49 99999 999999',\r\n                'it': '+39 999 999 9999',\r\n                'jp': '+81 999-9999-9999',\r\n                'pt': '+351 999 999 999',\r\n            };\r\n            return masks[this.selectedCountry] || '';\r\n        },\r\n        onSelectCompany() {\r\n            const selectedCompanyId = this.companies.find(company => company.name === this.selectedCompany)?._id || '';\r\n            this.branches.company_id = selectedCompanyId;\r\n        },\r\n        searchCompanies(event: any) {\r\n            const query = event.query.toLowerCase();\r\n            this.companyNames = this.companies\r\n                .filter(company => company.name.toLowerCase().includes(query))\r\n                .map(company => company.name);\r\n        },\r\n        onCancel() {\r\n            this.innerVisible = false;\r\n        },\r\n    }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.flex-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\n.flex-item {\r\n    flex: 0 0 48%;\r\n\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .flex-container {\r\n        flex-direction: column;\r\n    }\r\n\r\n    .flex-item {\r\n        flex: 0 0 100%;\r\n    }\r\n\r\n    .flex-item {\r\n        flex: 0 0 45%;\r\n    }\r\n}\r\n</style>","import { render } from \"./BranchModal.vue?vue&type=template&id=368656e7&scoped=true&ts=true\"\nimport script from \"./BranchModal.vue?vue&type=script&lang=ts\"\nexport * from \"./BranchModal.vue?vue&type=script&lang=ts\"\n\nimport \"./BranchModal.vue?vue&type=style&index=0&id=368656e7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-368656e7\"]])\n\nexport default __exports__","import { render } from \"./BranchPage.vue?vue&type=template&id=028e3a3a&scoped=true&ts=true\"\nimport script from \"./BranchPage.vue?vue&type=script&lang=ts\"\nexport * from \"./BranchPage.vue?vue&type=script&lang=ts\"\n\nimport \"./BranchPage.vue?vue&type=style&index=0&id=028e3a3a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-028e3a3a\"]])\n\nexport default __exports__"],"names":["_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_createElementVNode","_hoisted_5","_hoisted_6","_hoisted_7","ref","_hoisted_8","render","_ctx","_cache","$props","$setup","$data","$options","_component_Button","_resolveComponent","_component_InputText","_component_InputGroupAddon","_component_InputGroup","_component_Toolbar","_component_Column","_component_CountryFlag","_component_DataTable","_component_DeleteModal","_component_BranchModal","_openBlock","_createElementBlock","_Fragment","isLoaded","key","_toDisplayString","company","name","_createVNode","start","_withCtx","icon","severity","onClick","exportToExcel","exportToPDF","center","default","modelValue","searchText","$event","placeholder","$t","style","onInput","filterBranches","rounded","_","end","label","openItem","value","filteredBranches","paginator","rows","tableStyle","loading","empty","_createTextVNode","field","header","sortable","body","data","country","getCountryCode","getCountryName","formatCurrency","share_capital","_normalizeClass","active","deleteItem","goToFinancial","isDeleteModalVisible","_createBlock","visible","id","idBranch","items","onItemDeleted","handlerFilteringBranch","_createCommentVNode","isModalVisible","idCompany","onBrancheUpdated","for","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_component_Dropdown","_component_InputMask","_component_InputNumber","_component_Calendar","_component_RadioButton","_component_Toast","_component_Dialog","innerVisible","modal","labelTitle","width","maxWidth","footer","onCancel","onSave","selectedCompany","disabled","branches","selectedCountry","options","countries","optionLabel","optionValue","onChange","onCountryChange","option","code","size","selectedLegalNature","getLegalNaturesForCountry","onLegalNatureChange","cnpj","mask","getMaskForCountryBranche","inputId","mode","currency","locale","showIcon","iconDisplay","dateEstablishment","dateFormat","zip","getMaskForCountryZipCode","phone","getMaskForCountryPhone","defineComponent","props","String","required","type","Boolean","setup","toasts","useToast","t","useI18n","showFailedToast","add","summary","detail","life","user","branchesArray","companies","companyNames","Date","isDuplicate","this","userIdentify","userNameIdentify","selectedPhoneMask","masks","legalNatures","created","store","useStore","userId","state","userName","router","push","mounted","fetchUsers","fetchCompany","fetchAllCompanies","fetchBranch","computed","get","set","$emit","methods","response","axiosInstance","error","console","filter","includes","_id","date_establishment","legal_nature","formatDate","postBranch","onSelectCompany","checkDuplicateBranche","toISOString","post","brancheId","branch","put","putBranch","brancheName","branche","some","userBrancheId","toLowerCase","length","dateString","toLocaleDateString","month","day","year","map","selectedCompanyId","find","company_id","searchCompanies","event","query","__exports__","components","BranchModal","DeleteModal","modalData","statusActive","statusInactive","fetchCompanies","fetchBranches","updatedBranch","countryCode","c","getStatus","onConfirm","countryName","pdf","jsPDF","columns","title","dataKey","toString","autoTable","head","col","row","startY","styles","overflow","columnStyles","cellWidth","margin","top","left","save","isNaN","parseFloat","numericValue","toFixed","replace","Name","Branch","Country","Company","Status","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","searchTextLower","toLocaleLowerCase","startsWith"],"sourceRoot":""}